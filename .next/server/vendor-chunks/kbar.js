"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/kbar";
exports.ids = ["vendor-chunks/kbar"];
exports.modules = {

/***/ "(ssr)/./node_modules/kbar/lib/InternalEvents.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/InternalEvents.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.InternalEvents = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tinykeys_1 = __importDefault(__webpack_require__(/*! ./tinykeys */ \"(ssr)/./node_modules/kbar/lib/tinykeys.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nfunction InternalEvents() {\n    useToggleHandler();\n    useDocumentLock();\n    useShortcuts();\n    useFocusHandler();\n    return null;\n}\nexports.InternalEvents = InternalEvents;\n/**\n * `useToggleHandler` handles the keyboard events for toggling kbar.\n */ function useToggleHandler() {\n    var _a, _b;\n    var _c = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState,\n            showing: state.visualState !== types_1.VisualState.hidden,\n            disabled: state.disabled\n        };\n    }), query = _c.query, options = _c.options, visualState = _c.visualState, showing = _c.showing, disabled = _c.disabled;\n    React.useEffect(function() {\n        var _a;\n        var close = function() {\n            query.setVisualState(function(vs) {\n                if (vs === types_1.VisualState.hidden || vs === types_1.VisualState.animatingOut) {\n                    return vs;\n                }\n                return types_1.VisualState.animatingOut;\n            });\n        };\n        if (disabled) {\n            close();\n            return;\n        }\n        var shortcut = options.toggleShortcut || \"$mod+k\";\n        var unsubscribe = (0, tinykeys_1.default)(window, (_a = {}, _a[shortcut] = function(event) {\n            var _a, _b, _c, _d;\n            if (event.defaultPrevented) return;\n            event.preventDefault();\n            query.toggle();\n            if (showing) {\n                (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            } else {\n                (_d = (_c = options.callbacks) === null || _c === void 0 ? void 0 : _c.onOpen) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }, _a.Escape = function(event) {\n            var _a, _b;\n            if (showing) {\n                event.stopPropagation();\n                event.preventDefault();\n                (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            close();\n        }, _a));\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        options.callbacks,\n        options.toggleShortcut,\n        query,\n        showing,\n        disabled\n    ]);\n    var timeoutRef = React.useRef();\n    var runAnimateTimer = React.useCallback(function(vs) {\n        var _a, _b;\n        var ms = 0;\n        if (vs === types_1.VisualState.animatingIn) {\n            ms = ((_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs) || 0;\n        }\n        if (vs === types_1.VisualState.animatingOut) {\n            ms = ((_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs) || 0;\n        }\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(function() {\n            var backToRoot = false;\n            // TODO: setVisualState argument should be a function or just a VisualState value.\n            query.setVisualState(function() {\n                var finalVs = vs === types_1.VisualState.animatingIn ? types_1.VisualState.showing : types_1.VisualState.hidden;\n                if (finalVs === types_1.VisualState.hidden) {\n                    backToRoot = true;\n                }\n                return finalVs;\n            });\n            if (backToRoot) {\n                query.setCurrentRootAction(null);\n            }\n        }, ms);\n    }, [\n        (_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs,\n        (_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs,\n        query\n    ]);\n    React.useEffect(function() {\n        switch(visualState){\n            case types_1.VisualState.animatingIn:\n            case types_1.VisualState.animatingOut:\n                runAnimateTimer(visualState);\n                break;\n        }\n    }, [\n        runAnimateTimer,\n        visualState\n    ]);\n}\n/**\n * `useDocumentLock` is a simple implementation for preventing the\n * underlying page content from scrolling when kbar is open.\n */ function useDocumentLock() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState\n        };\n    }), visualState = _a.visualState, options = _a.options;\n    React.useEffect(function() {\n        if (options.disableDocumentLock) return;\n        if (visualState === types_1.VisualState.animatingIn) {\n            document.body.style.overflow = \"hidden\";\n            if (!options.disableScrollbarManagement) {\n                var scrollbarWidth = (0, utils_1.getScrollbarWidth)();\n                // take into account the margins explicitly added by the consumer\n                var mr = getComputedStyle(document.body)[\"margin-right\"];\n                if (mr) {\n                    // remove non-numeric values; px, rem, em, etc.\n                    scrollbarWidth += Number(mr.replace(/\\D/g, \"\"));\n                }\n                document.body.style.marginRight = scrollbarWidth + \"px\";\n            }\n        } else if (visualState === types_1.VisualState.hidden) {\n            document.body.style.removeProperty(\"overflow\");\n            if (!options.disableScrollbarManagement) {\n                document.body.style.removeProperty(\"margin-right\");\n            }\n        }\n    }, [\n        options.disableDocumentLock,\n        options.disableScrollbarManagement,\n        visualState\n    ]);\n}\n/**\n * Reference: https://github.com/jamiebuilds/tinykeys/issues/37\n *\n * Fixes an issue where simultaneous key commands for shortcuts;\n * ie given two actions with shortcuts ['t','s'] and ['s'], pressing\n * 't' and 's' consecutively will cause both shortcuts to fire.\n *\n * `wrap` sets each keystroke event in a WeakSet, and ensures that\n * if ['t', 's'] are pressed, then the subsequent ['s'] event will\n * be ignored. This depends on the order in which we register the\n * shortcuts to tinykeys, which is handled below.\n */ var handled = new WeakSet();\nfunction wrap(handler) {\n    return function(event) {\n        if (handled.has(event)) return;\n        handler(event);\n        handled.add(event);\n    };\n}\n/**\n * `useShortcuts` registers and listens to keyboard strokes and\n * performs actions for patterns that match the user defined `shortcut`.\n */ function useShortcuts() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            actions: state.actions,\n            open: state.visualState === types_1.VisualState.showing,\n            disabled: state.disabled\n        };\n    }), actions = _a.actions, query = _a.query, open = _a.open, options = _a.options, disabled = _a.disabled;\n    React.useEffect(function() {\n        var _a;\n        if (open || disabled) return;\n        var actionsList = Object.keys(actions).map(function(key) {\n            return actions[key];\n        });\n        var actionsWithShortcuts = [];\n        for(var _i = 0, actionsList_1 = actionsList; _i < actionsList_1.length; _i++){\n            var action = actionsList_1[_i];\n            if (!((_a = action.shortcut) === null || _a === void 0 ? void 0 : _a.length)) {\n                continue;\n            }\n            actionsWithShortcuts.push(action);\n        }\n        actionsWithShortcuts = actionsWithShortcuts.sort(function(a, b) {\n            return b.shortcut.join(\" \").length - a.shortcut.join(\" \").length;\n        });\n        var shortcutsMap = {};\n        var _loop_1 = function(action) {\n            var shortcut = action.shortcut.join(\" \");\n            shortcutsMap[shortcut] = wrap(function(event) {\n                var _a, _b, _c, _d, _e, _f;\n                if ((0, utils_1.shouldRejectKeystrokes)()) return;\n                event.preventDefault();\n                if ((_a = action.children) === null || _a === void 0 ? void 0 : _a.length) {\n                    query.setCurrentRootAction(action.id);\n                    query.toggle();\n                    (_c = (_b = options.callbacks) === null || _b === void 0 ? void 0 : _b.onOpen) === null || _c === void 0 ? void 0 : _c.call(_b);\n                } else {\n                    (_d = action.command) === null || _d === void 0 ? void 0 : _d.perform();\n                    (_f = (_e = options.callbacks) === null || _e === void 0 ? void 0 : _e.onSelectAction) === null || _f === void 0 ? void 0 : _f.call(_e, action);\n                }\n            });\n        };\n        for(var _b = 0, actionsWithShortcuts_1 = actionsWithShortcuts; _b < actionsWithShortcuts_1.length; _b++){\n            var action = actionsWithShortcuts_1[_b];\n            _loop_1(action);\n        }\n        var unsubscribe = (0, tinykeys_1.default)(window, shortcutsMap, {\n            timeout: 400\n        });\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        actions,\n        open,\n        options.callbacks,\n        query,\n        disabled\n    ]);\n}\n/**\n * `useFocusHandler` ensures that focus is set back on the element which was\n * in focus prior to kbar being triggered.\n */ function useFocusHandler() {\n    var rFirstRender = React.useRef(true);\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            isShowing: state.visualState === types_1.VisualState.showing || state.visualState === types_1.VisualState.animatingIn\n        };\n    }), isShowing = _a.isShowing, query = _a.query;\n    var activeElementRef = React.useRef(null);\n    React.useEffect(function() {\n        if (rFirstRender.current) {\n            rFirstRender.current = false;\n            return;\n        }\n        if (isShowing) {\n            activeElementRef.current = document.activeElement;\n            return;\n        }\n        // This fixes an issue on Safari where closing kbar causes the entire\n        // page to scroll to the bottom. The reason this was happening was due\n        // to the search input still in focus when we removed it from the dom.\n        var currentActiveElement = document.activeElement;\n        if ((currentActiveElement === null || currentActiveElement === void 0 ? void 0 : currentActiveElement.tagName.toLowerCase()) === \"input\") {\n            currentActiveElement.blur();\n        }\n        var activeElement = activeElementRef.current;\n        if (activeElement && activeElement !== currentActiveElement) {\n            activeElement.focus();\n        }\n    }, [\n        isShowing\n    ]);\n    // When focus is blurred from the search input while kbar is still\n    // open, any keystroke should set focus back to the search input.\n    React.useEffect(function() {\n        function handler(event) {\n            var input = query.getInput();\n            if (event.target !== input) {\n                input.focus();\n            }\n        }\n        if (isShowing) {\n            window.addEventListener(\"keydown\", handler);\n            return function() {\n                window.removeEventListener(\"keydown\", handler);\n            };\n        }\n    }, [\n        isShowing,\n        query\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvSW50ZXJuYWxFdmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsSUFBSyxJQUFJLElBQUksQ0FBQ0EsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxxQkFBcUIsSUFBSyxJQUFJLElBQUksQ0FBQ0Esa0JBQWtCLElBQU1WLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVTLENBQUM7SUFDekZYLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsSUFBSyxJQUFJLElBQUksQ0FBQ0EsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSUMsVUFBVSxFQUFFLE9BQU9EO0lBQ2xDLElBQUlFLFNBQVMsQ0FBQztJQUNkLElBQUlGLE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSVYsS0FBS1UsSUFBSyxJQUFJVixNQUFNLGFBQWFKLE9BQU9pQixTQUFTLENBQUNDLGNBQWMs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QixJQUFJbkYsTUFBTW9GLE1BQU0sS0FBS0YsT0FBTztnQkFDeEJBLE1BQU1ELEtBQUs7WUFDZjtRQUNKO1FBQ0EsSUFBSVAsV0FBVztZQUNYM0UsT0FBT3NGLGdCQUFnQixDQUFDLFdBQVczQztZQUNuQyxPQUFPO2dCQUNIM0MsT0FBT3VGLG1CQUFtQixDQUFDLFdBQVc1QztZQUMxQztRQUNKO0lBQ0osR0FBRztRQUFDZ0M7UUFBV3RGO0tBQU07QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRlcmlvLW11aS1yZWFjdC1uZXh0anMtYWRtaW4tdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvSW50ZXJuYWxFdmVudHMuanM/NDliNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnRlcm5hbEV2ZW50cyA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIHRpbnlrZXlzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vdGlueWtleXNcIikpO1xudmFyIHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbnZhciB1c2VLQmFyXzEgPSByZXF1aXJlKFwiLi91c2VLQmFyXCIpO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmZ1bmN0aW9uIEludGVybmFsRXZlbnRzKCkge1xuICAgIHVzZVRvZ2dsZUhhbmRsZXIoKTtcbiAgICB1c2VEb2N1bWVudExvY2soKTtcbiAgICB1c2VTaG9ydGN1dHMoKTtcbiAgICB1c2VGb2N1c0hhbmRsZXIoKTtcbiAgICByZXR1cm4gbnVsbDtcbn1cbmV4cG9ydHMuSW50ZXJuYWxFdmVudHMgPSBJbnRlcm5hbEV2ZW50cztcbi8qKlxuICogYHVzZVRvZ2dsZUhhbmRsZXJgIGhhbmRsZXMgdGhlIGtleWJvYXJkIGV2ZW50cyBmb3IgdG9nZ2xpbmcga2Jhci5cbiAqL1xuZnVuY3Rpb24gdXNlVG9nZ2xlSGFuZGxlcigpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHZhciBfYyA9ICgwLCB1c2VLQmFyXzEudXNlS0JhcikoZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoe1xuICAgICAgICB2aXN1YWxTdGF0ZTogc3RhdGUudmlzdWFsU3RhdGUsXG4gICAgICAgIHNob3dpbmc6IHN0YXRlLnZpc3VhbFN0YXRlICE9PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbixcbiAgICAgICAgZGlzYWJsZWQ6IHN0YXRlLmRpc2FibGVkLFxuICAgIH0pOyB9KSwgcXVlcnkgPSBfYy5xdWVyeSwgb3B0aW9ucyA9IF9jLm9wdGlvbnMsIHZpc3VhbFN0YXRlID0gX2MudmlzdWFsU3RhdGUsIHNob3dpbmcgPSBfYy5zaG93aW5nLCBkaXNhYmxlZCA9IF9jLmRpc2FibGVkO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIGNsb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcXVlcnkuc2V0VmlzdWFsU3RhdGUoZnVuY3Rpb24gKHZzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbiB8fCB2cyA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdPdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdPdXQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgICAgICBjbG9zZSgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzaG9ydGN1dCA9IG9wdGlvbnMudG9nZ2xlU2hvcnRjdXQgfHwgXCIkbW9kK2tcIjtcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gKDAsIHRpbnlrZXlzXzEuZGVmYXVsdCkod2luZG93LCAoX2EgPSB7fSxcbiAgICAgICAgICAgIF9hW3Nob3J0Y3V0XSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgcXVlcnkudG9nZ2xlKCk7XG4gICAgICAgICAgICAgICAgaWYgKHNob3dpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9iID0gKF9hID0gb3B0aW9ucy5jYWxsYmFja3MpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vbkNsb3NlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAoX2QgPSAoX2MgPSBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLm9uT3BlbikgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmNhbGwoX2MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfYS5Fc2NhcGUgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgIGlmIChzaG93aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAoX2IgPSAoX2EgPSBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm9uQ2xvc2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2xvc2UoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfYSkpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbb3B0aW9ucy5jYWxsYmFja3MsIG9wdGlvbnMudG9nZ2xlU2hvcnRjdXQsIHF1ZXJ5LCBzaG93aW5nLCBkaXNhYmxlZF0pO1xuICAgIHZhciB0aW1lb3V0UmVmID0gUmVhY3QudXNlUmVmKCk7XG4gICAgdmFyIHJ1bkFuaW1hdGVUaW1lciA9IFJlYWN0LnVzZUNhbGxiYWNrKGZ1bmN0aW9uICh2cykge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB2YXIgbXMgPSAwO1xuICAgICAgICBpZiAodnMgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nSW4pIHtcbiAgICAgICAgICAgIG1zID0gKChfYSA9IG9wdGlvbnMuYW5pbWF0aW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmVudGVyTXMpIHx8IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ091dCkge1xuICAgICAgICAgICAgbXMgPSAoKF9iID0gb3B0aW9ucy5hbmltYXRpb25zKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXhpdE1zKSB8fCAwO1xuICAgICAgICB9XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0UmVmLmN1cnJlbnQpO1xuICAgICAgICB0aW1lb3V0UmVmLmN1cnJlbnQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBiYWNrVG9Sb290ID0gZmFsc2U7XG4gICAgICAgICAgICAvLyBUT0RPOiBzZXRWaXN1YWxTdGF0ZSBhcmd1bWVudCBzaG91bGQgYmUgYSBmdW5jdGlvbiBvciBqdXN0IGEgVmlzdWFsU3RhdGUgdmFsdWUuXG4gICAgICAgICAgICBxdWVyeS5zZXRWaXN1YWxTdGF0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZpbmFsVnMgPSB2cyA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdJblxuICAgICAgICAgICAgICAgICAgICA/IHR5cGVzXzEuVmlzdWFsU3RhdGUuc2hvd2luZ1xuICAgICAgICAgICAgICAgICAgICA6IHR5cGVzXzEuVmlzdWFsU3RhdGUuaGlkZGVuO1xuICAgICAgICAgICAgICAgIGlmIChmaW5hbFZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbikge1xuICAgICAgICAgICAgICAgICAgICBiYWNrVG9Sb290ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZpbmFsVnM7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChiYWNrVG9Sb290KSB7XG4gICAgICAgICAgICAgICAgcXVlcnkuc2V0Q3VycmVudFJvb3RBY3Rpb24obnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIG1zKTtcbiAgICB9LCBbKF9hID0gb3B0aW9ucy5hbmltYXRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW50ZXJNcywgKF9iID0gb3B0aW9ucy5hbmltYXRpb25zKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXhpdE1zLCBxdWVyeV0pO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN3aXRjaCAodmlzdWFsU3RhdGUpIHtcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdJbjpcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdPdXQ6XG4gICAgICAgICAgICAgICAgcnVuQW5pbWF0ZVRpbWVyKHZpc3VhbFN0YXRlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH0sIFtydW5BbmltYXRlVGltZXIsIHZpc3VhbFN0YXRlXSk7XG59XG4vKipcbiAqIGB1c2VEb2N1bWVudExvY2tgIGlzIGEgc2ltcGxlIGltcGxlbWVudGF0aW9uIGZvciBwcmV2ZW50aW5nIHRoZVxuICogdW5kZXJseWluZyBwYWdlIGNvbnRlbnQgZnJvbSBzY3JvbGxpbmcgd2hlbiBrYmFyIGlzIG9wZW4uXG4gKi9cbmZ1bmN0aW9uIHVzZURvY3VtZW50TG9jaygpIHtcbiAgICB2YXIgX2EgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgdmlzdWFsU3RhdGU6IHN0YXRlLnZpc3VhbFN0YXRlLFxuICAgIH0pOyB9KSwgdmlzdWFsU3RhdGUgPSBfYS52aXN1YWxTdGF0ZSwgb3B0aW9ucyA9IF9hLm9wdGlvbnM7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuZGlzYWJsZURvY3VtZW50TG9jaylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKHZpc3VhbFN0YXRlID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ0luKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcbiAgICAgICAgICAgIGlmICghb3B0aW9ucy5kaXNhYmxlU2Nyb2xsYmFyTWFuYWdlbWVudCkge1xuICAgICAgICAgICAgICAgIHZhciBzY3JvbGxiYXJXaWR0aCA9ICgwLCB1dGlsc18xLmdldFNjcm9sbGJhcldpZHRoKSgpO1xuICAgICAgICAgICAgICAgIC8vIHRha2UgaW50byBhY2NvdW50IHRoZSBtYXJnaW5zIGV4cGxpY2l0bHkgYWRkZWQgYnkgdGhlIGNvbnN1bWVyXG4gICAgICAgICAgICAgICAgdmFyIG1yID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5ib2R5KVtcIm1hcmdpbi1yaWdodFwiXTtcbiAgICAgICAgICAgICAgICBpZiAobXIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIG5vbi1udW1lcmljIHZhbHVlczsgcHgsIHJlbSwgZW0sIGV0Yy5cbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsYmFyV2lkdGggKz0gTnVtYmVyKG1yLnJlcGxhY2UoL1xcRC9nLCBcIlwiKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUubWFyZ2luUmlnaHQgPSBzY3JvbGxiYXJXaWR0aCArIFwicHhcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2aXN1YWxTdGF0ZSA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5oaWRkZW4pIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJvdmVyZmxvd1wiKTtcbiAgICAgICAgICAgIGlmICghb3B0aW9ucy5kaXNhYmxlU2Nyb2xsYmFyTWFuYWdlbWVudCkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJtYXJnaW4tcmlnaHRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBbXG4gICAgICAgIG9wdGlvbnMuZGlzYWJsZURvY3VtZW50TG9jayxcbiAgICAgICAgb3B0aW9ucy5kaXNhYmxlU2Nyb2xsYmFyTWFuYWdlbWVudCxcbiAgICAgICAgdmlzdWFsU3RhdGUsXG4gICAgXSk7XG59XG4vKipcbiAqIFJlZmVyZW5jZTogaHR0cHM6Ly9naXRodWIuY29tL2phbWllYnVpbGRzL3RpbnlrZXlzL2lzc3Vlcy8zN1xuICpcbiAqIEZpeGVzIGFuIGlzc3VlIHdoZXJlIHNpbXVsdGFuZW91cyBrZXkgY29tbWFuZHMgZm9yIHNob3J0Y3V0cztcbiAqIGllIGdpdmVuIHR3byBhY3Rpb25zIHdpdGggc2hvcnRjdXRzIFsndCcsJ3MnXSBhbmQgWydzJ10sIHByZXNzaW5nXG4gKiAndCcgYW5kICdzJyBjb25zZWN1dGl2ZWx5IHdpbGwgY2F1c2UgYm90aCBzaG9ydGN1dHMgdG8gZmlyZS5cbiAqXG4gKiBgd3JhcGAgc2V0cyBlYWNoIGtleXN0cm9rZSBldmVudCBpbiBhIFdlYWtTZXQsIGFuZCBlbnN1cmVzIHRoYXRcbiAqIGlmIFsndCcsICdzJ10gYXJlIHByZXNzZWQsIHRoZW4gdGhlIHN1YnNlcXVlbnQgWydzJ10gZXZlbnQgd2lsbFxuICogYmUgaWdub3JlZC4gVGhpcyBkZXBlbmRzIG9uIHRoZSBvcmRlciBpbiB3aGljaCB3ZSByZWdpc3RlciB0aGVcbiAqIHNob3J0Y3V0cyB0byB0aW55a2V5cywgd2hpY2ggaXMgaGFuZGxlZCBiZWxvdy5cbiAqL1xudmFyIGhhbmRsZWQgPSBuZXcgV2Vha1NldCgpO1xuZnVuY3Rpb24gd3JhcChoYW5kbGVyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoaGFuZGxlZC5oYXMoZXZlbnQpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBoYW5kbGVyKGV2ZW50KTtcbiAgICAgICAgaGFuZGxlZC5hZGQoZXZlbnQpO1xuICAgIH07XG59XG4vKipcbiAqIGB1c2VTaG9ydGN1dHNgIHJlZ2lzdGVycyBhbmQgbGlzdGVucyB0byBrZXlib2FyZCBzdHJva2VzIGFuZFxuICogcGVyZm9ybXMgYWN0aW9ucyBmb3IgcGF0dGVybnMgdGhhdCBtYXRjaCB0aGUgdXNlciBkZWZpbmVkIGBzaG9ydGN1dGAuXG4gKi9cbmZ1bmN0aW9uIHVzZVNob3J0Y3V0cygpIHtcbiAgICB2YXIgX2EgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgYWN0aW9uczogc3RhdGUuYWN0aW9ucyxcbiAgICAgICAgb3Blbjogc3RhdGUudmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuc2hvd2luZyxcbiAgICAgICAgZGlzYWJsZWQ6IHN0YXRlLmRpc2FibGVkLFxuICAgIH0pOyB9KSwgYWN0aW9ucyA9IF9hLmFjdGlvbnMsIHF1ZXJ5ID0gX2EucXVlcnksIG9wZW4gPSBfYS5vcGVuLCBvcHRpb25zID0gX2Eub3B0aW9ucywgZGlzYWJsZWQgPSBfYS5kaXNhYmxlZDtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChvcGVuIHx8IGRpc2FibGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgYWN0aW9uc0xpc3QgPSBPYmplY3Qua2V5cyhhY3Rpb25zKS5tYXAoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gYWN0aW9uc1trZXldOyB9KTtcbiAgICAgICAgdmFyIGFjdGlvbnNXaXRoU2hvcnRjdXRzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgYWN0aW9uc0xpc3RfMSA9IGFjdGlvbnNMaXN0OyBfaSA8IGFjdGlvbnNMaXN0XzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uID0gYWN0aW9uc0xpc3RfMVtfaV07XG4gICAgICAgICAgICBpZiAoISgoX2EgPSBhY3Rpb24uc2hvcnRjdXQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY3Rpb25zV2l0aFNob3J0Y3V0cy5wdXNoKGFjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgYWN0aW9uc1dpdGhTaG9ydGN1dHMgPSBhY3Rpb25zV2l0aFNob3J0Y3V0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBiLnNob3J0Y3V0LmpvaW4oXCIgXCIpLmxlbmd0aCAtIGEuc2hvcnRjdXQuam9pbihcIiBcIikubGVuZ3RoOyB9KTtcbiAgICAgICAgdmFyIHNob3J0Y3V0c01hcCA9IHt9O1xuICAgICAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgICAgIHZhciBzaG9ydGN1dCA9IGFjdGlvbi5zaG9ydGN1dC5qb2luKFwiIFwiKTtcbiAgICAgICAgICAgIHNob3J0Y3V0c01hcFtzaG9ydGN1dF0gPSB3cmFwKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mO1xuICAgICAgICAgICAgICAgIGlmICgoMCwgdXRpbHNfMS5zaG91bGRSZWplY3RLZXlzdHJva2VzKSgpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBpZiAoKF9hID0gYWN0aW9uLmNoaWxkcmVuKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LnNldEN1cnJlbnRSb290QWN0aW9uKGFjdGlvbi5pZCk7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LnRvZ2dsZSgpO1xuICAgICAgICAgICAgICAgICAgICAoX2MgPSAoX2IgPSBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm9uT3BlbikgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgKF9kID0gYWN0aW9uLmNvbW1hbmQpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5wZXJmb3JtKCk7XG4gICAgICAgICAgICAgICAgICAgIChfZiA9IChfZSA9IG9wdGlvbnMuY2FsbGJhY2tzKSA9PT0gbnVsbCB8fCBfZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Uub25TZWxlY3RBY3Rpb24pID09PSBudWxsIHx8IF9mID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZi5jYWxsKF9lLCBhY3Rpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBfYiA9IDAsIGFjdGlvbnNXaXRoU2hvcnRjdXRzXzEgPSBhY3Rpb25zV2l0aFNob3J0Y3V0czsgX2IgPCBhY3Rpb25zV2l0aFNob3J0Y3V0c18xLmxlbmd0aDsgX2IrKykge1xuICAgICAgICAgICAgdmFyIGFjdGlvbiA9IGFjdGlvbnNXaXRoU2hvcnRjdXRzXzFbX2JdO1xuICAgICAgICAgICAgX2xvb3BfMShhY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9ICgwLCB0aW55a2V5c18xLmRlZmF1bHQpKHdpbmRvdywgc2hvcnRjdXRzTWFwLCB7XG4gICAgICAgICAgICB0aW1lb3V0OiA0MDAsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbYWN0aW9ucywgb3Blbiwgb3B0aW9ucy5jYWxsYmFja3MsIHF1ZXJ5LCBkaXNhYmxlZF0pO1xufVxuLyoqXG4gKiBgdXNlRm9jdXNIYW5kbGVyYCBlbnN1cmVzIHRoYXQgZm9jdXMgaXMgc2V0IGJhY2sgb24gdGhlIGVsZW1lbnQgd2hpY2ggd2FzXG4gKiBpbiBmb2N1cyBwcmlvciB0byBrYmFyIGJlaW5nIHRyaWdnZXJlZC5cbiAqL1xuZnVuY3Rpb24gdXNlRm9jdXNIYW5kbGVyKCkge1xuICAgIHZhciByRmlyc3RSZW5kZXIgPSBSZWFjdC51c2VSZWYodHJ1ZSk7XG4gICAgdmFyIF9hID0gKDAsIHVzZUtCYXJfMS51c2VLQmFyKShmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuICh7XG4gICAgICAgIGlzU2hvd2luZzogc3RhdGUudmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuc2hvd2luZyB8fFxuICAgICAgICAgICAgc3RhdGUudmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nSW4sXG4gICAgfSk7IH0pLCBpc1Nob3dpbmcgPSBfYS5pc1Nob3dpbmcsIHF1ZXJ5ID0gX2EucXVlcnk7XG4gICAgdmFyIGFjdGl2ZUVsZW1lbnRSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHJGaXJzdFJlbmRlci5jdXJyZW50KSB7XG4gICAgICAgICAgICByRmlyc3RSZW5kZXIuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1Nob3dpbmcpIHtcbiAgICAgICAgICAgIGFjdGl2ZUVsZW1lbnRSZWYuY3VycmVudCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGhpcyBmaXhlcyBhbiBpc3N1ZSBvbiBTYWZhcmkgd2hlcmUgY2xvc2luZyBrYmFyIGNhdXNlcyB0aGUgZW50aXJlXG4gICAgICAgIC8vIHBhZ2UgdG8gc2Nyb2xsIHRvIHRoZSBib3R0b20uIFRoZSByZWFzb24gdGhpcyB3YXMgaGFwcGVuaW5nIHdhcyBkdWVcbiAgICAgICAgLy8gdG8gdGhlIHNlYXJjaCBpbnB1dCBzdGlsbCBpbiBmb2N1cyB3aGVuIHdlIHJlbW92ZWQgaXQgZnJvbSB0aGUgZG9tLlxuICAgICAgICB2YXIgY3VycmVudEFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgICAgICBpZiAoKGN1cnJlbnRBY3RpdmVFbGVtZW50ID09PSBudWxsIHx8IGN1cnJlbnRBY3RpdmVFbGVtZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdXJyZW50QWN0aXZlRWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkpID09PSBcImlucHV0XCIpIHtcbiAgICAgICAgICAgIGN1cnJlbnRBY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWN0aXZlRWxlbWVudCA9IGFjdGl2ZUVsZW1lbnRSZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGFjdGl2ZUVsZW1lbnQgJiYgYWN0aXZlRWxlbWVudCAhPT0gY3VycmVudEFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgICAgIGFjdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH0sIFtpc1Nob3dpbmddKTtcbiAgICAvLyBXaGVuIGZvY3VzIGlzIGJsdXJyZWQgZnJvbSB0aGUgc2VhcmNoIGlucHV0IHdoaWxlIGtiYXIgaXMgc3RpbGxcbiAgICAvLyBvcGVuLCBhbnkga2V5c3Ryb2tlIHNob3VsZCBzZXQgZm9jdXMgYmFjayB0byB0aGUgc2VhcmNoIGlucHV0LlxuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZXIoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBpbnB1dCA9IHF1ZXJ5LmdldElucHV0KCk7XG4gICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ICE9PSBpbnB1dCkge1xuICAgICAgICAgICAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2hvd2luZykge1xuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZXIpO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlcik7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfSwgW2lzU2hvd2luZywgcXVlcnldKTtcbn1cbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfX2ltcG9ydERlZmF1bHQiLCJleHBvcnRzIiwiSW50ZXJuYWxFdmVudHMiLCJSZWFjdCIsInJlcXVpcmUiLCJ0aW55a2V5c18xIiwidHlwZXNfMSIsInVzZUtCYXJfMSIsInV0aWxzXzEiLCJ1c2VUb2dnbGVIYW5kbGVyIiwidXNlRG9jdW1lbnRMb2NrIiwidXNlU2hvcnRjdXRzIiwidXNlRm9jdXNIYW5kbGVyIiwiX2EiLCJfYiIsIl9jIiwidXNlS0JhciIsInN0YXRlIiwidmlzdWFsU3RhdGUiLCJzaG93aW5nIiwiVmlzdWFsU3RhdGUiLCJoaWRkZW4iLCJkaXNhYmxlZCIsInF1ZXJ5Iiwib3B0aW9ucyIsInVzZUVmZmVjdCIsImNsb3NlIiwic2V0VmlzdWFsU3RhdGUiLCJ2cyIsImFuaW1hdGluZ091dCIsInNob3J0Y3V0IiwidG9nZ2xlU2hvcnRjdXQiLCJ1bnN1YnNjcmliZSIsImRlZmF1bHQiLCJ3aW5kb3ciLCJldmVudCIsIl9kIiwiZGVmYXVsdFByZXZlbnRlZCIsInByZXZlbnREZWZhdWx0IiwidG9nZ2xlIiwiY2FsbGJhY2tzIiwib25DbG9zZSIsIm9uT3BlbiIsIkVzY2FwZSIsInN0b3BQcm9wYWdhdGlvbiIsInRpbWVvdXRSZWYiLCJ1c2VSZWYiLCJydW5BbmltYXRlVGltZXIiLCJ1c2VDYWxsYmFjayIsIm1zIiwiYW5pbWF0aW5nSW4iLCJhbmltYXRpb25zIiwiZW50ZXJNcyIsImV4aXRNcyIsImNsZWFyVGltZW91dCIsImN1cnJlbnQiLCJzZXRUaW1lb3V0IiwiYmFja1RvUm9vdCIsImZpbmFsVnMiLCJzZXRDdXJyZW50Um9vdEFjdGlvbiIsImRpc2FibGVEb2N1bWVudExvY2siLCJkb2N1bWVudCIsImJvZHkiLCJzdHlsZSIsIm92ZXJmbG93IiwiZGlzYWJsZVNjcm9sbGJhck1hbmFnZW1lbnQiLCJzY3JvbGxiYXJXaWR0aCIsImdldFNjcm9sbGJhcldpZHRoIiwibXIiLCJnZXRDb21wdXRlZFN0eWxlIiwiTnVtYmVyIiwicmVwbGFjZSIsIm1hcmdpblJpZ2h0IiwicmVtb3ZlUHJvcGVydHkiLCJoYW5kbGVkIiwiV2Vha1NldCIsIndyYXAiLCJoYW5kbGVyIiwiaGFzIiwiYWRkIiwiYWN0aW9ucyIsIm9wZW4iLCJhY3Rpb25zTGlzdCIsImtleXMiLCJtYXAiLCJrZXkiLCJhY3Rpb25zV2l0aFNob3J0Y3V0cyIsIl9pIiwiYWN0aW9uc0xpc3RfMSIsImxlbmd0aCIsImFjdGlvbiIsInB1c2giLCJzb3J0IiwiYSIsImIiLCJqb2luIiwic2hvcnRjdXRzTWFwIiwiX2xvb3BfMSIsIl9lIiwiX2YiLCJzaG91bGRSZWplY3RLZXlzdHJva2VzIiwiY2hpbGRyZW4iLCJpZCIsImNvbW1hbmQiLCJwZXJmb3JtIiwib25TZWxlY3RBY3Rpb24iLCJhY3Rpb25zV2l0aFNob3J0Y3V0c18xIiwidGltZW91dCIsInJGaXJzdFJlbmRlciIsImlzU2hvd2luZyIsImFjdGl2ZUVsZW1lbnRSZWYiLCJhY3RpdmVFbGVtZW50IiwiY3VycmVudEFjdGl2ZUVsZW1lbnQiLCJ0YWdOYW1lIiwidG9Mb3dlckNhc2UiLCJibHVyIiwiZm9jdXMiLCJpbnB1dCIsImdldElucHV0IiwidGFyZ2V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/InternalEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarAnimator.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/KBarAnimator.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarAnimator = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar appearanceAnimationKeyframes = [\n    {\n        opacity: 0,\n        transform: \"scale(.99)\"\n    },\n    {\n        opacity: 1,\n        transform: \"scale(1.01)\"\n    },\n    {\n        opacity: 1,\n        transform: \"scale(1)\"\n    }\n];\nvar bumpAnimationKeyframes = [\n    {\n        transform: \"scale(1)\"\n    },\n    {\n        transform: \"scale(.98)\"\n    },\n    {\n        transform: \"scale(1)\"\n    }\n];\nvar KBarAnimator = function(_a) {\n    var _b, _c;\n    var children = _a.children, style = _a.style, className = _a.className, disableCloseOnOuterClick = _a.disableCloseOnOuterClick;\n    var _d = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState,\n            currentRootActionId: state.currentRootActionId\n        };\n    }), visualState = _d.visualState, currentRootActionId = _d.currentRootActionId, query = _d.query, options = _d.options;\n    var outerRef = React.useRef(null);\n    var innerRef = React.useRef(null);\n    var enterMs = ((_b = options === null || options === void 0 ? void 0 : options.animations) === null || _b === void 0 ? void 0 : _b.enterMs) || 0;\n    var exitMs = ((_c = options === null || options === void 0 ? void 0 : options.animations) === null || _c === void 0 ? void 0 : _c.exitMs) || 0;\n    // Show/hide animation\n    React.useEffect(function() {\n        if (visualState === types_1.VisualState.showing) {\n            return;\n        }\n        var duration = visualState === types_1.VisualState.animatingIn ? enterMs : exitMs;\n        var element = outerRef.current;\n        element === null || element === void 0 ? void 0 : element.animate(appearanceAnimationKeyframes, {\n            duration: duration,\n            easing: // TODO: expose easing in options\n            visualState === types_1.VisualState.animatingOut ? \"ease-in\" : \"ease-out\",\n            direction: visualState === types_1.VisualState.animatingOut ? \"reverse\" : \"normal\",\n            fill: \"forwards\"\n        });\n    }, [\n        options,\n        visualState,\n        enterMs,\n        exitMs\n    ]);\n    // Height animation\n    var previousHeight = React.useRef();\n    React.useEffect(function() {\n        // Only animate if we're actually showing\n        if (visualState === types_1.VisualState.showing) {\n            var outer_1 = outerRef.current;\n            var inner_1 = innerRef.current;\n            if (!outer_1 || !inner_1) {\n                return;\n            }\n            var ro_1 = new ResizeObserver(function(entries) {\n                for(var _i = 0, entries_1 = entries; _i < entries_1.length; _i++){\n                    var entry = entries_1[_i];\n                    var cr = entry.contentRect;\n                    if (!previousHeight.current) {\n                        previousHeight.current = cr.height;\n                    }\n                    outer_1.animate([\n                        {\n                            height: previousHeight.current + \"px\"\n                        },\n                        {\n                            height: cr.height + \"px\"\n                        }\n                    ], {\n                        duration: enterMs / 2,\n                        // TODO: expose configs here\n                        easing: \"ease-out\",\n                        fill: \"forwards\"\n                    });\n                    previousHeight.current = cr.height;\n                }\n            });\n            ro_1.observe(inner_1);\n            return function() {\n                ro_1.unobserve(inner_1);\n            };\n        }\n    }, [\n        visualState,\n        options,\n        enterMs,\n        exitMs\n    ]);\n    // Bump animation between nested actions\n    var firstRender = React.useRef(true);\n    React.useEffect(function() {\n        if (firstRender.current) {\n            firstRender.current = false;\n            return;\n        }\n        var element = outerRef.current;\n        if (element) {\n            element.animate(bumpAnimationKeyframes, {\n                duration: enterMs,\n                easing: \"ease-out\"\n            });\n        }\n    }, [\n        currentRootActionId,\n        enterMs\n    ]);\n    (0, utils_1.useOuterClick)(outerRef, function() {\n        var _a, _b;\n        if (disableCloseOnOuterClick) {\n            return;\n        }\n        query.setVisualState(types_1.VisualState.animatingOut);\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n    });\n    return React.createElement(\"div\", {\n        ref: outerRef,\n        style: __assign(__assign(__assign({}, appearanceAnimationKeyframes[0]), style), {\n            pointerEvents: \"auto\"\n        }),\n        className: className\n    }, React.createElement(\"div\", {\n        ref: innerRef\n    }, children));\n};\nexports.KBarAnimator = KBarAnimator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarAnimator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarContextProvider.js":
/*!******************************************************!*\
  !*** ./node_modules/kbar/lib/KBarContextProvider.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarProvider = exports.KBarContext = void 0;\nvar useStore_1 = __webpack_require__(/*! ./useStore */ \"(ssr)/./node_modules/kbar/lib/useStore.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar InternalEvents_1 = __webpack_require__(/*! ./InternalEvents */ \"(ssr)/./node_modules/kbar/lib/InternalEvents.js\");\nexports.KBarContext = React.createContext({});\nvar KBarProvider = function(props) {\n    var contextValue = (0, useStore_1.useStore)(props);\n    return React.createElement(exports.KBarContext.Provider, {\n        value: contextValue\n    }, React.createElement(InternalEvents_1.InternalEvents, null), props.children);\n};\nexports.KBarProvider = KBarProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhckNvbnRleHRQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixJQUFLLElBQUksSUFBSSxDQUFDQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCSixPQUFPTyxjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLHFCQUFxQixJQUFLLElBQUksSUFBSSxDQUFDQSxrQkFBa0IsSUFBTVYsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RlgsT0FBT08sY0FBYyxDQUFDTCxHQUFHLFdBQVc7UUFBRU0sWUFBWTtRQUFNSSxPQUFPRDtJQUFFO0FBQ3JFLElBQUssU0FBU1QsQ0FBQyxFQUFFUyxDQUFDO0lBQ2RULENBQUMsQ0FBQyxVQUFVLEdBQUdTO0FBQ25CO0FBQ0EsSUFBSUUsZUFBZSxJQUFLLElBQUksSUFBSSxDQUFDQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYUosT0FBT2lCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLEtBQUtWLElBQUlMLGdCQUFnQmlCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBaEIsOENBQTZDO0lBQUVZLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RRLG9CQUFvQixHQUFHQSxtQkFBbUIsR0FBRyxLQUFLO0FBQ2xELElBQUlHLGFBQWFDLG1CQUFPQSxDQUFDLDZEQUFZO0FBQ3JDLElBQUlDLFFBQVFaLGFBQWFXLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ3hDLElBQUlFLG1CQUFtQkYsbUJBQU9BLENBQUMseUVBQWtCO0FBQ2pESixtQkFBbUIsR0FBR0ssTUFBTUUsYUFBYSxDQUFDLENBQUM7QUFDM0MsSUFBSU4sZUFBZSxTQUFVTyxLQUFLO0lBQzlCLElBQUlDLGVBQWUsQ0FBQyxHQUFHTixXQUFXTyxRQUFRLEVBQUVGO0lBQzVDLE9BQVFILE1BQU1NLGFBQWEsQ0FBQ1gsUUFBUUUsV0FBVyxDQUFDVSxRQUFRLEVBQUU7UUFBRXBCLE9BQU9pQjtJQUFhLEdBQzVFSixNQUFNTSxhQUFhLENBQUNMLGlCQUFpQk8sY0FBYyxFQUFFLE9BQ3JETCxNQUFNTSxRQUFRO0FBQ3RCO0FBQ0FkLG9CQUFvQixHQUFHQyIsInNvdXJjZXMiOlsid2VicGFjazovL21hdGVyaW8tbXVpLXJlYWN0LW5leHRqcy1hZG1pbi10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9LQmFyQ29udGV4dFByb3ZpZGVyLmpzP2NiNDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS0JhclByb3ZpZGVyID0gZXhwb3J0cy5LQmFyQ29udGV4dCA9IHZvaWQgMDtcbnZhciB1c2VTdG9yZV8xID0gcmVxdWlyZShcIi4vdXNlU3RvcmVcIik7XG52YXIgUmVhY3QgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBJbnRlcm5hbEV2ZW50c18xID0gcmVxdWlyZShcIi4vSW50ZXJuYWxFdmVudHNcIik7XG5leHBvcnRzLktCYXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh7fSk7XG52YXIgS0JhclByb3ZpZGVyID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgdmFyIGNvbnRleHRWYWx1ZSA9ICgwLCB1c2VTdG9yZV8xLnVzZVN0b3JlKShwcm9wcyk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KGV4cG9ydHMuS0JhckNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNvbnRleHRWYWx1ZSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEludGVybmFsRXZlbnRzXzEuSW50ZXJuYWxFdmVudHMsIG51bGwpLFxuICAgICAgICBwcm9wcy5jaGlsZHJlbikpO1xufTtcbmV4cG9ydHMuS0JhclByb3ZpZGVyID0gS0JhclByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwiX19lc01vZHVsZSIsInJlc3VsdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImV4cG9ydHMiLCJLQmFyUHJvdmlkZXIiLCJLQmFyQ29udGV4dCIsInVzZVN0b3JlXzEiLCJyZXF1aXJlIiwiUmVhY3QiLCJJbnRlcm5hbEV2ZW50c18xIiwiY3JlYXRlQ29udGV4dCIsInByb3BzIiwiY29udGV4dFZhbHVlIiwidXNlU3RvcmUiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJJbnRlcm5hbEV2ZW50cyIsImNoaWxkcmVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPortal.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarPortal.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarPortal = void 0;\nvar react_portal_1 = __webpack_require__(/*! @radix-ui/react-portal */ \"(ssr)/./node_modules/@radix-ui/react-portal/dist/index.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction KBarPortal(_a) {\n    var children = _a.children, container = _a.container;\n    var showing = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            showing: state.visualState !== types_1.VisualState.hidden\n        };\n    }).showing;\n    if (!showing) {\n        return null;\n    }\n    return React.createElement(react_portal_1.Portal, {\n        container: container\n    }, children);\n}\nexports.KBarPortal = KBarPortal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvcnRhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixJQUFLLElBQUksSUFBSSxDQUFDQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCSixPQUFPTyxjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLHFCQUFxQixJQUFLLElBQUksSUFBSSxDQUFDQSxrQkFBa0IsSUFBTVYsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RlgsT0FBT08sY0FBYyxDQUFDTCxHQUFHLFdBQVc7UUFBRU0sWUFBWTtRQUFNSSxPQUFPRDtJQUFFO0FBQ3JFLElBQUssU0FBU1QsQ0FBQyxFQUFFUyxDQUFDO0lBQ2RULENBQUMsQ0FBQyxVQUFVLEdBQUdTO0FBQ25CO0FBQ0EsSUFBSUUsZUFBZSxJQUFLLElBQUksSUFBSSxDQUFDQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYUosT0FBT2lCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLEtBQUtWLElBQUlMLGdCQUFnQmlCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBaEIsOENBQTZDO0lBQUVZLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RRLGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsSUFBSUUsaUJBQWlCQyxtQkFBT0EsQ0FBQyx5RkFBd0I7QUFDckQsSUFBSUMsUUFBUVgsYUFBYVUsbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUUsVUFBVUYsbUJBQU9BLENBQUMsdURBQVM7QUFDL0IsSUFBSUcsWUFBWUgsbUJBQU9BLENBQUMsMkRBQVc7QUFDbkMsU0FBU0YsV0FBV00sRUFBRTtJQUNsQixJQUFJQyxXQUFXRCxHQUFHQyxRQUFRLEVBQUVDLFlBQVlGLEdBQUdFLFNBQVM7SUFDcEQsSUFBSUMsVUFBVSxDQUFDLEdBQUdKLFVBQVVLLE9BQU8sRUFBRSxTQUFVQyxLQUFLO1FBQUksT0FBUTtZQUM1REYsU0FBU0UsTUFBTUMsV0FBVyxLQUFLUixRQUFRUyxXQUFXLENBQUNDLE1BQU07UUFDN0Q7SUFBSSxHQUFHTCxPQUFPO0lBQ2QsSUFBSSxDQUFDQSxTQUFTO1FBQ1YsT0FBTztJQUNYO0lBQ0EsT0FBT04sTUFBTVksYUFBYSxDQUFDZCxlQUFlZSxNQUFNLEVBQUU7UUFBRVIsV0FBV0E7SUFBVSxHQUFHRDtBQUNoRjtBQUNBUixrQkFBa0IsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRlcmlvLW11aS1yZWFjdC1uZXh0anMtYWRtaW4tdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvcnRhbC5qcz82YzkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktCYXJQb3J0YWwgPSB2b2lkIDA7XG52YXIgcmVhY3RfcG9ydGFsXzEgPSByZXF1aXJlKFwiQHJhZGl4LXVpL3JlYWN0LXBvcnRhbFwiKTtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbnZhciB1c2VLQmFyXzEgPSByZXF1aXJlKFwiLi91c2VLQmFyXCIpO1xuZnVuY3Rpb24gS0JhclBvcnRhbChfYSkge1xuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBjb250YWluZXIgPSBfYS5jb250YWluZXI7XG4gICAgdmFyIHNob3dpbmcgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgc2hvd2luZzogc3RhdGUudmlzdWFsU3RhdGUgIT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuaGlkZGVuLFxuICAgIH0pOyB9KS5zaG93aW5nO1xuICAgIGlmICghc2hvd2luZykge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3RfcG9ydGFsXzEuUG9ydGFsLCB7IGNvbnRhaW5lcjogY29udGFpbmVyIH0sIGNoaWxkcmVuKTtcbn1cbmV4cG9ydHMuS0JhclBvcnRhbCA9IEtCYXJQb3J0YWw7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJfX2VzTW9kdWxlIiwicmVzdWx0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZXhwb3J0cyIsIktCYXJQb3J0YWwiLCJyZWFjdF9wb3J0YWxfMSIsInJlcXVpcmUiLCJSZWFjdCIsInR5cGVzXzEiLCJ1c2VLQmFyXzEiLCJfYSIsImNoaWxkcmVuIiwiY29udGFpbmVyIiwic2hvd2luZyIsInVzZUtCYXIiLCJzdGF0ZSIsInZpc3VhbFN0YXRlIiwiVmlzdWFsU3RhdGUiLCJoaWRkZW4iLCJjcmVhdGVFbGVtZW50IiwiUG9ydGFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPortal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPositioner.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/KBarPositioner.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = this && this.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarPositioner = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar defaultStyle = {\n    position: \"fixed\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    inset: \"0px\",\n    padding: \"14vh 16px 16px\"\n};\nfunction getStyle(style) {\n    return style ? __assign(__assign({}, defaultStyle), style) : defaultStyle;\n}\nexports.KBarPositioner = React.forwardRef(function(_a, ref) {\n    var style = _a.style, children = _a.children, props = __rest(_a, [\n        \"style\",\n        \"children\"\n    ]);\n    return React.createElement(\"div\", __assign({\n        ref: ref,\n        style: getStyle(style)\n    }, props), children);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvc2l0aW9uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxXQUFXLElBQUssSUFBSSxJQUFJLENBQUNBLFFBQVEsSUFBSztJQUN0Q0EsV0FBV0MsT0FBT0MsTUFBTSxJQUFJLFNBQVNDLENBQUM7UUFDbEMsSUFBSyxJQUFJQyxHQUFHQyxJQUFJLEdBQUdDLElBQUlDLFVBQVVDLE1BQU0sRUFBRUgsSUFBSUMsR0FBR0QsSUFBSztZQUNqREQsSUFBSUcsU0FBUyxDQUFDRixFQUFFO1lBQ2hCLElBQUssSUFBSUksS0FBS0wsRUFBRyxJQUFJSCxPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUN6RE4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUNuQjtRQUNBLE9BQU9OO0lBQ1g7SUFDQSxPQUFPSCxTQUFTYSxLQUFLLENBQUMsSUFBSSxFQUFFTjtBQUNoQztBQUNBLElBQUlPLGtCQUFrQixJQUFLLElBQUksSUFBSSxDQUFDQSxlQUFlLElBQU1iLENBQUFBLE9BQU9jLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCakIsT0FBT29CLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLElBQUssSUFBSSxJQUFJLENBQUNBLGtCQUFrQixJQUFNdkIsQ0FBQUEsT0FBT2MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RnhCLE9BQU9vQixjQUFjLENBQUNMLEdBQUcsV0FBVztRQUFFTSxZQUFZO1FBQU1JLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTVCxDQUFDLEVBQUVTLENBQUM7SUFDZFQsQ0FBQyxDQUFDLFVBQVUsR0FBR1M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLElBQUssSUFBSSxJQUFJLENBQUNBLFlBQVksSUFBSyxTQUFVQyxHQUFHO0lBQzNELElBQUlBLE9BQU9BLElBQUlDLFVBQVUsRUFBRSxPQUFPRDtJQUNsQyxJQUFJRSxTQUFTLENBQUM7SUFDZCxJQUFJRixPQUFPLE1BQU07UUFBQSxJQUFLLElBQUlWLEtBQUtVLElBQUssSUFBSVYsTUFBTSxhQUFhakIsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ2dCLEtBQUtWLElBQUlKLGdCQUFnQmdCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBLElBQUlDLFNBQVMsSUFBSyxJQUFJLElBQUksQ0FBQ0EsTUFBTSxJQUFLLFNBQVUzQixDQUFDLEVBQUU0QixDQUFDO0lBQ2hELElBQUk3QixJQUFJLENBQUM7SUFDVCxJQUFLLElBQUlNLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssTUFBTXVCLEVBQUVDLE9BQU8sQ0FBQ3hCLEtBQUssR0FDOUVOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7SUFDZixJQUFJTCxLQUFLLFFBQVEsT0FBT0gsT0FBT2lDLHFCQUFxQixLQUFLLFlBQ3JELElBQUssSUFBSTdCLElBQUksR0FBR0ksSUFBSVIsT0FBT2lDLHFCQUFxQixDQUFDOUIsSUFBSUMsSUFBSUksRUFBRUQsTUFBTSxFQUFFSCxJQUFLO1FBQ3BFLElBQUkyQixFQUFFQyxPQUFPLENBQUN4QixDQUFDLENBQUNKLEVBQUUsSUFBSSxLQUFLSixPQUFPUyxTQUFTLENBQUN5QixvQkFBb0IsQ0FBQ3ZCLElBQUksQ0FBQ1IsR0FBR0ssQ0FBQyxDQUFDSixFQUFFLEdBQ3pFRixDQUFDLENBQUNNLENBQUMsQ0FBQ0osRUFBRSxDQUFDLEdBQUdELENBQUMsQ0FBQ0ssQ0FBQyxDQUFDSixFQUFFLENBQUM7SUFDekI7SUFDSixPQUFPRjtBQUNYO0FBQ0FGLDhDQUE2QztJQUFFeUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RFUsc0JBQXNCLEdBQUcsS0FBSztBQUM5QixJQUFJRSxRQUFRWCxhQUFhWSxtQkFBT0EsQ0FBQyx3R0FBTztBQUN4QyxJQUFJQyxlQUFlO0lBQ2ZDLFVBQVU7SUFDVkMsU0FBUztJQUNUQyxZQUFZO0lBQ1pDLGdCQUFnQjtJQUNoQkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLFNBQVM7QUFDYjtBQUNBLFNBQVNDLFNBQVNDLEtBQUs7SUFDbkIsT0FBT0EsUUFBUWpELFNBQVNBLFNBQVMsQ0FBQyxHQUFHd0MsZUFBZVMsU0FBU1Q7QUFDakU7QUFDQUosc0JBQXNCLEdBQUdFLE1BQU1ZLFVBQVUsQ0FBQyxTQUFVQyxFQUFFLEVBQUVDLEdBQUc7SUFDdkQsSUFBSUgsUUFBUUUsR0FBR0YsS0FBSyxFQUFFSSxXQUFXRixHQUFHRSxRQUFRLEVBQUVDLFFBQVF2QixPQUFPb0IsSUFBSTtRQUFDO1FBQVM7S0FBVztJQUN0RixPQUFRYixNQUFNaUIsYUFBYSxDQUFDLE9BQU92RCxTQUFTO1FBQUVvRCxLQUFLQTtRQUFLSCxPQUFPRCxTQUFTQztJQUFPLEdBQUdLLFFBQVFEO0FBQzlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0ZXJpby1tdWktcmVhY3QtbmV4dGpzLWFkbWluLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL0tCYXJQb3NpdGlvbmVyLmpzP2Q5OTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktCYXJQb3NpdGlvbmVyID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgZGVmYXVsdFN0eWxlID0ge1xuICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIGluc2V0OiBcIjBweFwiLFxuICAgIHBhZGRpbmc6IFwiMTR2aCAxNnB4IDE2cHhcIixcbn07XG5mdW5jdGlvbiBnZXRTdHlsZShzdHlsZSkge1xuICAgIHJldHVybiBzdHlsZSA/IF9fYXNzaWduKF9fYXNzaWduKHt9LCBkZWZhdWx0U3R5bGUpLCBzdHlsZSkgOiBkZWZhdWx0U3R5bGU7XG59XG5leHBvcnRzLktCYXJQb3NpdGlvbmVyID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAoX2EsIHJlZikge1xuICAgIHZhciBzdHlsZSA9IF9hLnN0eWxlLCBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wic3R5bGVcIiwgXCJjaGlsZHJlblwiXSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIF9fYXNzaWduKHsgcmVmOiByZWYsIHN0eWxlOiBnZXRTdHlsZShzdHlsZSkgfSwgcHJvcHMpLCBjaGlsZHJlbikpO1xufSk7XG4iXSwibmFtZXMiOlsiX19hc3NpZ24iLCJPYmplY3QiLCJhc3NpZ24iLCJ0IiwicyIsImkiLCJuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX19jcmVhdGVCaW5kaW5nIiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJfX2VzTW9kdWxlIiwicmVzdWx0IiwiX19yZXN0IiwiZSIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImV4cG9ydHMiLCJLQmFyUG9zaXRpb25lciIsIlJlYWN0IiwicmVxdWlyZSIsImRlZmF1bHRTdHlsZSIsInBvc2l0aW9uIiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsIndpZHRoIiwiaW5zZXQiLCJwYWRkaW5nIiwiZ2V0U3R5bGUiLCJzdHlsZSIsImZvcndhcmRSZWYiLCJfYSIsInJlZiIsImNoaWxkcmVuIiwicHJvcHMiLCJjcmVhdGVFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPositioner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarResults.js":
/*!**********************************************!*\
  !*** ./node_modules/kbar/lib/KBarResults.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarResults = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar react_virtual_1 = __webpack_require__(/*! react-virtual */ \"(ssr)/./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs\");\nvar KBarSearch_1 = __webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar START_INDEX = 0;\nvar KBarResults = function(props) {\n    var activeRef = React.useRef(null);\n    var parentRef = React.useRef(null);\n    // store a ref to all items so we do not have to pass\n    // them as a dependency when setting up event listeners.\n    var itemsRef = React.useRef(props.items);\n    itemsRef.current = props.items;\n    var rowVirtualizer = (0, react_virtual_1.useVirtual)({\n        size: itemsRef.current.length,\n        parentRef: parentRef\n    });\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            currentRootActionId: state.currentRootActionId,\n            activeIndex: state.activeIndex\n        };\n    }), query = _a.query, search = _a.search, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, options = _a.options;\n    React.useEffect(function() {\n        var handler = function(event) {\n            var _a;\n            if (event.isComposing) {\n                return;\n            }\n            if (event.key === \"ArrowUp\" || event.ctrlKey && event.key === \"p\") {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function(index) {\n                    var nextIndex = index > START_INDEX ? index - 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === 0) return index;\n                        nextIndex -= 1;\n                    }\n                    return nextIndex;\n                });\n            } else if (event.key === \"ArrowDown\" || event.ctrlKey && event.key === \"n\") {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function(index) {\n                    var nextIndex = index < itemsRef.current.length - 1 ? index + 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === itemsRef.current.length - 1) return index;\n                        nextIndex += 1;\n                    }\n                    return nextIndex;\n                });\n            } else if (event.key === \"Enter\") {\n                event.preventDefault();\n                event.stopPropagation();\n                // storing the active dom element in a ref prevents us from\n                // having to calculate the current action to perform based\n                // on the `activeIndex`, which we would have needed to add\n                // as part of the dependencies array.\n                (_a = activeRef.current) === null || _a === void 0 ? void 0 : _a.click();\n            }\n        };\n        window.addEventListener(\"keydown\", handler, {\n            capture: true\n        });\n        return function() {\n            return window.removeEventListener(\"keydown\", handler, {\n                capture: true\n            });\n        };\n    }, [\n        query\n    ]);\n    // destructuring here to prevent linter warning to pass\n    // entire rowVirtualizer in the dependencies array.\n    var scrollToIndex = rowVirtualizer.scrollToIndex;\n    React.useEffect(function() {\n        scrollToIndex(activeIndex, {\n            // ensure that if the first item in the list is a group\n            // name and we are focused on the second item, to not\n            // scroll past that group, hiding it.\n            align: activeIndex <= 1 ? \"end\" : \"auto\"\n        });\n    }, [\n        activeIndex,\n        scrollToIndex\n    ]);\n    React.useEffect(function() {\n        // TODO(tim): fix scenario where async actions load in\n        // and active index is reset to the first item. i.e. when\n        // users register actions and bust the `useRegisterActions`\n        // cache, we won't want to reset their active index as they\n        // are navigating the list.\n        query.setActiveIndex(// avoid setting active index on a group\n        typeof props.items[START_INDEX] === \"string\" ? START_INDEX + 1 : START_INDEX);\n    }, [\n        search,\n        currentRootActionId,\n        props.items,\n        query\n    ]);\n    var execute = React.useCallback(function(item) {\n        var _a, _b;\n        if (typeof item === \"string\") return;\n        if (item.command) {\n            item.command.perform(item);\n            query.toggle();\n        } else {\n            query.setSearch(\"\");\n            query.setCurrentRootAction(item.id);\n        }\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onSelectAction) === null || _b === void 0 ? void 0 : _b.call(_a, item);\n    }, [\n        query,\n        options\n    ]);\n    var pointerMoved = (0, utils_1.usePointerMovedSinceMount)();\n    return React.createElement(\"div\", {\n        ref: parentRef,\n        style: {\n            maxHeight: props.maxHeight || 400,\n            position: \"relative\",\n            overflow: \"auto\"\n        }\n    }, React.createElement(\"div\", {\n        role: \"listbox\",\n        id: KBarSearch_1.KBAR_LISTBOX,\n        style: {\n            height: rowVirtualizer.totalSize + \"px\",\n            width: \"100%\"\n        }\n    }, rowVirtualizer.virtualItems.map(function(virtualRow) {\n        var item = itemsRef.current[virtualRow.index];\n        var handlers = typeof item !== \"string\" && {\n            onPointerMove: function() {\n                return pointerMoved && activeIndex !== virtualRow.index && query.setActiveIndex(virtualRow.index);\n            },\n            onPointerDown: function() {\n                return query.setActiveIndex(virtualRow.index);\n            },\n            onClick: function() {\n                return execute(item);\n            }\n        };\n        var active = virtualRow.index === activeIndex;\n        return React.createElement(\"div\", __assign({\n            ref: active ? activeRef : null,\n            id: (0, KBarSearch_1.getListboxItemId)(virtualRow.index),\n            role: \"option\",\n            \"aria-selected\": active,\n            key: virtualRow.index,\n            style: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                transform: \"translateY(\" + virtualRow.start + \"px)\"\n            }\n        }, handlers), React.cloneElement(props.onRender({\n            item: item,\n            active: active\n        }), {\n            ref: virtualRow.measureRef\n        }));\n    })));\n};\nexports.KBarResults = KBarResults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarResults.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarSearch.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarSearch.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = this && this.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarSearch = exports.getListboxItemId = exports.KBAR_LISTBOX = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nexports.KBAR_LISTBOX = \"kbar-listbox\";\nvar getListboxItemId = function(id) {\n    return \"kbar-listbox-item-\" + id;\n};\nexports.getListboxItemId = getListboxItemId;\nfunction KBarSearch(props) {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            currentRootActionId: state.currentRootActionId,\n            actions: state.actions,\n            activeIndex: state.activeIndex,\n            showing: state.visualState === types_1.VisualState.showing\n        };\n    }), query = _a.query, search = _a.search, actions = _a.actions, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, showing = _a.showing, options = _a.options;\n    var _b = React.useState(search), inputValue = _b[0], setInputValue = _b[1];\n    React.useEffect(function() {\n        query.setSearch(inputValue);\n    }, [\n        inputValue,\n        query\n    ]);\n    var defaultPlaceholder = props.defaultPlaceholder, rest = __rest(props, [\n        \"defaultPlaceholder\"\n    ]);\n    React.useEffect(function() {\n        query.setSearch(\"\");\n        query.getInput().focus();\n        return function() {\n            return query.setSearch(\"\");\n        };\n    }, [\n        currentRootActionId,\n        query\n    ]);\n    var placeholder = React.useMemo(function() {\n        var defaultText = defaultPlaceholder !== null && defaultPlaceholder !== void 0 ? defaultPlaceholder : \"Type a command or search…\";\n        return currentRootActionId && actions[currentRootActionId] ? actions[currentRootActionId].name : defaultText;\n    }, [\n        actions,\n        currentRootActionId,\n        defaultPlaceholder\n    ]);\n    return React.createElement(\"input\", __assign({}, rest, {\n        ref: query.inputRefSetter,\n        autoFocus: true,\n        autoComplete: \"off\",\n        role: \"combobox\",\n        spellCheck: \"false\",\n        \"aria-expanded\": showing,\n        \"aria-controls\": exports.KBAR_LISTBOX,\n        \"aria-activedescendant\": (0, exports.getListboxItemId)(activeIndex),\n        value: inputValue,\n        placeholder: placeholder,\n        onChange: function(event) {\n            var _a, _b, _c;\n            (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            setInputValue(event.target.value);\n            (_c = (_b = options === null || options === void 0 ? void 0 : options.callbacks) === null || _b === void 0 ? void 0 : _b.onQueryChange) === null || _c === void 0 ? void 0 : _c.call(_b, event.target.value);\n        },\n        onKeyDown: function(event) {\n            var _a;\n            (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            if (currentRootActionId && !search && event.key === \"Backspace\") {\n                var parent_1 = actions[currentRootActionId].parent;\n                query.setCurrentRootAction(parent_1);\n            }\n        }\n    }));\n}\nexports.KBarSearch = KBarSearch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarSearch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionImpl.js":
/*!****************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionImpl.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ActionImpl = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar Command_1 = __webpack_require__(/*! ./Command */ \"(ssr)/./node_modules/kbar/lib/action/Command.js\");\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\n/**\n * Extends the configured keywords to include the section\n * This allows section names to be searched for.\n */ var extendKeywords = function(_a) {\n    var _b = _a.keywords, keywords = _b === void 0 ? \"\" : _b, _c = _a.section, section = _c === void 0 ? \"\" : _c;\n    return (keywords + \" \" + (typeof section === \"string\" ? section : section.name)).trim();\n};\nvar ActionImpl = /** @class */ function() {\n    function ActionImpl(action, options) {\n        var _this = this;\n        var _a;\n        this.priority = utils_1.Priority.NORMAL;\n        this.ancestors = [];\n        this.children = [];\n        Object.assign(this, action);\n        this.id = action.id;\n        this.name = action.name;\n        this.keywords = extendKeywords(action);\n        var perform = action.perform;\n        this.command = perform && new Command_1.Command({\n            perform: function() {\n                return perform(_this);\n            }\n        }, {\n            history: options.history\n        });\n        // Backwards compatibility\n        this.perform = (_a = this.command) === null || _a === void 0 ? void 0 : _a.perform;\n        if (action.parent) {\n            var parentActionImpl = options.store[action.parent];\n            (0, tiny_invariant_1.default)(parentActionImpl, \"attempted to create an action whos parent: \" + action.parent + \" does not exist in the store.\");\n            parentActionImpl.addChild(this);\n        }\n    }\n    ActionImpl.prototype.addChild = function(childActionImpl) {\n        // add all ancestors for the child action\n        childActionImpl.ancestors.unshift(this);\n        var parent = this.parentActionImpl;\n        while(parent){\n            childActionImpl.ancestors.unshift(parent);\n            parent = parent.parentActionImpl;\n        }\n        // we ensure that order of adding always goes\n        // parent -> children, so no need to recurse\n        this.children.push(childActionImpl);\n    };\n    ActionImpl.prototype.removeChild = function(actionImpl) {\n        var _this = this;\n        // recursively remove all children\n        var index = this.children.indexOf(actionImpl);\n        if (index !== -1) {\n            this.children.splice(index, 1);\n        }\n        if (actionImpl.children) {\n            actionImpl.children.forEach(function(child) {\n                _this.removeChild(child);\n            });\n        }\n    };\n    Object.defineProperty(ActionImpl.prototype, \"parentActionImpl\", {\n        // easily access parentActionImpl after creation\n        get: function() {\n            return this.ancestors[this.ancestors.length - 1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ActionImpl.create = function(action, options) {\n        return new ActionImpl(action, options);\n    };\n    return ActionImpl;\n}();\nexports.ActionImpl = ActionImpl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionInterface.js":
/*!*********************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionInterface.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ActionInterface = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionImpl_1 = __webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\");\nvar ActionInterface = /** @class */ function() {\n    function ActionInterface(actions, options) {\n        if (actions === void 0) {\n            actions = [];\n        }\n        if (options === void 0) {\n            options = {};\n        }\n        this.actions = {};\n        this.options = options;\n        this.add(actions);\n    }\n    ActionInterface.prototype.add = function(actions) {\n        for(var i = 0; i < actions.length; i++){\n            var action = actions[i];\n            if (action.parent) {\n                (0, tiny_invariant_1.default)(this.actions[action.parent], 'Attempted to create action \"' + action.name + '\" without registering its parent \"' + action.parent + '\" first.');\n            }\n            this.actions[action.id] = ActionImpl_1.ActionImpl.create(action, {\n                history: this.options.historyManager,\n                store: this.actions\n            });\n        }\n        return __assign({}, this.actions);\n    };\n    ActionInterface.prototype.remove = function(actions) {\n        var _this = this;\n        actions.forEach(function(action) {\n            var actionImpl = _this.actions[action.id];\n            if (!actionImpl) return;\n            var children = actionImpl.children;\n            while(children.length){\n                var child = children.pop();\n                if (!child) return;\n                delete _this.actions[child.id];\n                if (child.parentActionImpl) child.parentActionImpl.removeChild(child);\n                if (child.children) children.push.apply(children, child.children);\n            }\n            if (actionImpl.parentActionImpl) {\n                actionImpl.parentActionImpl.removeChild(actionImpl);\n            }\n            delete _this.actions[action.id];\n        });\n        return __assign({}, this.actions);\n    };\n    return ActionInterface;\n}();\nexports.ActionInterface = ActionInterface;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFdBQVcsSUFBSyxJQUFJLElBQUksQ0FBQ0EsUUFBUSxJQUFLO0lBQ3RDQSxXQUFXQyxPQUFPQyxNQUFNLElBQUksU0FBU0MsQ0FBQztRQUNsQyxJQUFLLElBQUlDLEdBQUdDLElBQUksR0FBR0MsSUFBSUMsVUFBVUMsTUFBTSxFQUFFSCxJQUFJQyxHQUFHRCxJQUFLO1lBQ2pERCxJQUFJRyxTQUFTLENBQUNGLEVBQUU7WUFDaEIsSUFBSyxJQUFJSSxLQUFLTCxFQUFHLElBQUlILE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQ3pETixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQ25CO1FBQ0EsT0FBT047SUFDWDtJQUNBLE9BQU9ILFNBQVNhLEtBQUssQ0FBQyxJQUFJLEVBQUVOO0FBQ2hDO0FBQ0EsSUFBSU8sa0JBQWtCLElBQUssSUFBSSxJQUFJLENBQUNBLGVBQWUsSUFBSyxTQUFVQyxHQUFHO0lBQ2pFLE9BQU8sT0FBUUEsSUFBSUMsVUFBVSxHQUFJRCxNQUFNO1FBQUUsV0FBV0E7SUFBSTtBQUM1RDtBQUNBZCw4Q0FBNkM7SUFBRWtCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHLEtBQUs7QUFDL0IsSUFBSUcsbUJBQW1CUCxnQkFBZ0JRLG1CQUFPQSxDQUFDLHNGQUFnQjtBQUMvRCxJQUFJQyxlQUFlRCxtQkFBT0EsQ0FBQyx3RUFBYztBQUN6QyxJQUFJRixrQkFBa0IsV0FBVyxHQUFJO0lBQ2pDLFNBQVNBLGdCQUFnQkksT0FBTyxFQUFFQyxPQUFPO1FBQ3JDLElBQUlELFlBQVksS0FBSyxHQUFHO1lBQUVBLFVBQVUsRUFBRTtRQUFFO1FBQ3hDLElBQUlDLFlBQVksS0FBSyxHQUFHO1lBQUVBLFVBQVUsQ0FBQztRQUFHO1FBQ3hDLElBQUksQ0FBQ0QsT0FBTyxHQUFHLENBQUM7UUFDaEIsSUFBSSxDQUFDQyxPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDQyxHQUFHLENBQUNGO0lBQ2I7SUFDQUosZ0JBQWdCVixTQUFTLENBQUNnQixHQUFHLEdBQUcsU0FBVUYsT0FBTztRQUM3QyxJQUFLLElBQUluQixJQUFJLEdBQUdBLElBQUltQixRQUFRaEIsTUFBTSxFQUFFSCxJQUFLO1lBQ3JDLElBQUlzQixTQUFTSCxPQUFPLENBQUNuQixFQUFFO1lBQ3ZCLElBQUlzQixPQUFPQyxNQUFNLEVBQUU7Z0JBQ2QsSUFBR1AsaUJBQWlCUSxPQUFPLEVBQUUsSUFBSSxDQUFDTCxPQUFPLENBQUNHLE9BQU9DLE1BQU0sQ0FBQyxFQUFFLGlDQUFrQ0QsT0FBT0csSUFBSSxHQUFHLHVDQUF5Q0gsT0FBT0MsTUFBTSxHQUFHO1lBQ3hLO1lBQ0EsSUFBSSxDQUFDSixPQUFPLENBQUNHLE9BQU9JLEVBQUUsQ0FBQyxHQUFHUixhQUFhUyxVQUFVLENBQUNDLE1BQU0sQ0FBQ04sUUFBUTtnQkFDN0RPLFNBQVMsSUFBSSxDQUFDVCxPQUFPLENBQUNVLGNBQWM7Z0JBQ3BDQyxPQUFPLElBQUksQ0FBQ1osT0FBTztZQUN2QjtRQUNKO1FBQ0EsT0FBT3hCLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQ3dCLE9BQU87SUFDcEM7SUFDQUosZ0JBQWdCVixTQUFTLENBQUMyQixNQUFNLEdBQUcsU0FBVWIsT0FBTztRQUNoRCxJQUFJYyxRQUFRLElBQUk7UUFDaEJkLFFBQVFlLE9BQU8sQ0FBQyxTQUFVWixNQUFNO1lBQzVCLElBQUlhLGFBQWFGLE1BQU1kLE9BQU8sQ0FBQ0csT0FBT0ksRUFBRSxDQUFDO1lBQ3pDLElBQUksQ0FBQ1MsWUFDRDtZQUNKLElBQUlDLFdBQVdELFdBQVdDLFFBQVE7WUFDbEMsTUFBT0EsU0FBU2pDLE1BQU0sQ0FBRTtnQkFDcEIsSUFBSWtDLFFBQVFELFNBQVNFLEdBQUc7Z0JBQ3hCLElBQUksQ0FBQ0QsT0FDRDtnQkFDSixPQUFPSixNQUFNZCxPQUFPLENBQUNrQixNQUFNWCxFQUFFLENBQUM7Z0JBQzlCLElBQUlXLE1BQU1FLGdCQUFnQixFQUN0QkYsTUFBTUUsZ0JBQWdCLENBQUNDLFdBQVcsQ0FBQ0g7Z0JBQ3ZDLElBQUlBLE1BQU1ELFFBQVEsRUFDZEEsU0FBU0ssSUFBSSxDQUFDakMsS0FBSyxDQUFDNEIsVUFBVUMsTUFBTUQsUUFBUTtZQUNwRDtZQUNBLElBQUlELFdBQVdJLGdCQUFnQixFQUFFO2dCQUM3QkosV0FBV0ksZ0JBQWdCLENBQUNDLFdBQVcsQ0FBQ0w7WUFDNUM7WUFDQSxPQUFPRixNQUFNZCxPQUFPLENBQUNHLE9BQU9JLEVBQUUsQ0FBQztRQUNuQztRQUNBLE9BQU8vQixTQUFTLENBQUMsR0FBRyxJQUFJLENBQUN3QixPQUFPO0lBQ3BDO0lBQ0EsT0FBT0o7QUFDWDtBQUNBRix1QkFBdUIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRlcmlvLW11aS1yZWFjdC1uZXh0anMtYWRtaW4tdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkludGVyZmFjZS5qcz9kYzdlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWN0aW9uSW50ZXJmYWNlID0gdm9pZCAwO1xudmFyIHRpbnlfaW52YXJpYW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInRpbnktaW52YXJpYW50XCIpKTtcbnZhciBBY3Rpb25JbXBsXzEgPSByZXF1aXJlKFwiLi9BY3Rpb25JbXBsXCIpO1xudmFyIEFjdGlvbkludGVyZmFjZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBY3Rpb25JbnRlcmZhY2UoYWN0aW9ucywgb3B0aW9ucykge1xuICAgICAgICBpZiAoYWN0aW9ucyA9PT0gdm9pZCAwKSB7IGFjdGlvbnMgPSBbXTsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB0aGlzLmFjdGlvbnMgPSB7fTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5hZGQoYWN0aW9ucyk7XG4gICAgfVxuICAgIEFjdGlvbkludGVyZmFjZS5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGFjdGlvbnMpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uID0gYWN0aW9uc1tpXTtcbiAgICAgICAgICAgIGlmIChhY3Rpb24ucGFyZW50KSB7XG4gICAgICAgICAgICAgICAgKDAsIHRpbnlfaW52YXJpYW50XzEuZGVmYXVsdCkodGhpcy5hY3Rpb25zW2FjdGlvbi5wYXJlbnRdLCBcIkF0dGVtcHRlZCB0byBjcmVhdGUgYWN0aW9uIFxcXCJcIiArIGFjdGlvbi5uYW1lICsgXCJcXFwiIHdpdGhvdXQgcmVnaXN0ZXJpbmcgaXRzIHBhcmVudCBcXFwiXCIgKyBhY3Rpb24ucGFyZW50ICsgXCJcXFwiIGZpcnN0LlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYWN0aW9uc1thY3Rpb24uaWRdID0gQWN0aW9uSW1wbF8xLkFjdGlvbkltcGwuY3JlYXRlKGFjdGlvbiwge1xuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMub3B0aW9ucy5oaXN0b3J5TWFuYWdlcixcbiAgICAgICAgICAgICAgICBzdG9yZTogdGhpcy5hY3Rpb25zLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9fYXNzaWduKHt9LCB0aGlzLmFjdGlvbnMpO1xuICAgIH07XG4gICAgQWN0aW9uSW50ZXJmYWNlLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoYWN0aW9ucykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBhY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICAgICAgdmFyIGFjdGlvbkltcGwgPSBfdGhpcy5hY3Rpb25zW2FjdGlvbi5pZF07XG4gICAgICAgICAgICBpZiAoIWFjdGlvbkltcGwpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGNoaWxkcmVuID0gYWN0aW9uSW1wbC5jaGlsZHJlbjtcbiAgICAgICAgICAgIHdoaWxlIChjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSBjaGlsZHJlbi5wb3AoKTtcbiAgICAgICAgICAgICAgICBpZiAoIWNoaWxkKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZGVsZXRlIF90aGlzLmFjdGlvbnNbY2hpbGQuaWRdO1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZC5wYXJlbnRBY3Rpb25JbXBsKVxuICAgICAgICAgICAgICAgICAgICBjaGlsZC5wYXJlbnRBY3Rpb25JbXBsLnJlbW92ZUNoaWxkKGNoaWxkKTtcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQuY2hpbGRyZW4pXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuLnB1c2guYXBwbHkoY2hpbGRyZW4sIGNoaWxkLmNoaWxkcmVuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhY3Rpb25JbXBsLnBhcmVudEFjdGlvbkltcGwpIHtcbiAgICAgICAgICAgICAgICBhY3Rpb25JbXBsLnBhcmVudEFjdGlvbkltcGwucmVtb3ZlQ2hpbGQoYWN0aW9uSW1wbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWxldGUgX3RoaXMuYWN0aW9uc1thY3Rpb24uaWRdO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9fYXNzaWduKHt9LCB0aGlzLmFjdGlvbnMpO1xuICAgIH07XG4gICAgcmV0dXJuIEFjdGlvbkludGVyZmFjZTtcbn0oKSk7XG5leHBvcnRzLkFjdGlvbkludGVyZmFjZSA9IEFjdGlvbkludGVyZmFjZTtcbiJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBY3Rpb25JbnRlcmZhY2UiLCJ0aW55X2ludmFyaWFudF8xIiwicmVxdWlyZSIsIkFjdGlvbkltcGxfMSIsImFjdGlvbnMiLCJvcHRpb25zIiwiYWRkIiwiYWN0aW9uIiwicGFyZW50IiwiZGVmYXVsdCIsIm5hbWUiLCJpZCIsIkFjdGlvbkltcGwiLCJjcmVhdGUiLCJoaXN0b3J5IiwiaGlzdG9yeU1hbmFnZXIiLCJzdG9yZSIsInJlbW92ZSIsIl90aGlzIiwiZm9yRWFjaCIsImFjdGlvbkltcGwiLCJjaGlsZHJlbiIsImNoaWxkIiwicG9wIiwicGFyZW50QWN0aW9uSW1wbCIsInJlbW92ZUNoaWxkIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/Command.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/action/Command.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Command = void 0;\nvar Command = /** @class */ function() {\n    function Command(command, options) {\n        var _this = this;\n        if (options === void 0) {\n            options = {};\n        }\n        this.perform = function() {\n            var negate = command.perform();\n            // no need for history if non negatable\n            if (typeof negate !== \"function\") return;\n            // return if no history enabled\n            var history = options.history;\n            if (!history) return;\n            // since we are performing the same action, we'll clean up the\n            // previous call to the action and create a new history record\n            if (_this.historyItem) {\n                history.remove(_this.historyItem);\n            }\n            _this.historyItem = history.add({\n                perform: command.perform,\n                negate: negate\n            });\n            _this.history = {\n                undo: function() {\n                    return history.undo(_this.historyItem);\n                },\n                redo: function() {\n                    return history.redo(_this.historyItem);\n                }\n            };\n        };\n    }\n    return Command;\n}();\nexports.Command = Command;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0NvbW1hbmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlFLFVBQVUsV0FBVyxHQUFJO0lBQ3pCLFNBQVNBLFFBQVFDLE9BQU8sRUFBRUMsT0FBTztRQUM3QixJQUFJQyxRQUFRLElBQUk7UUFDaEIsSUFBSUQsWUFBWSxLQUFLLEdBQUc7WUFBRUEsVUFBVSxDQUFDO1FBQUc7UUFDeEMsSUFBSSxDQUFDRSxPQUFPLEdBQUc7WUFDWCxJQUFJQyxTQUFTSixRQUFRRyxPQUFPO1lBQzVCLHVDQUF1QztZQUN2QyxJQUFJLE9BQU9DLFdBQVcsWUFDbEI7WUFDSiwrQkFBK0I7WUFDL0IsSUFBSUMsVUFBVUosUUFBUUksT0FBTztZQUM3QixJQUFJLENBQUNBLFNBQ0Q7WUFDSiw4REFBOEQ7WUFDOUQsOERBQThEO1lBQzlELElBQUlILE1BQU1JLFdBQVcsRUFBRTtnQkFDbkJELFFBQVFFLE1BQU0sQ0FBQ0wsTUFBTUksV0FBVztZQUNwQztZQUNBSixNQUFNSSxXQUFXLEdBQUdELFFBQVFHLEdBQUcsQ0FBQztnQkFDNUJMLFNBQVNILFFBQVFHLE9BQU87Z0JBQ3hCQyxRQUFRQTtZQUNaO1lBQ0FGLE1BQU1HLE9BQU8sR0FBRztnQkFDWkksTUFBTTtvQkFBYyxPQUFPSixRQUFRSSxJQUFJLENBQUNQLE1BQU1JLFdBQVc7Z0JBQUc7Z0JBQzVESSxNQUFNO29CQUFjLE9BQU9MLFFBQVFLLElBQUksQ0FBQ1IsTUFBTUksV0FBVztnQkFBRztZQUNoRTtRQUNKO0lBQ0o7SUFDQSxPQUFPUDtBQUNYO0FBQ0FGLGVBQWUsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRlcmlvLW11aS1yZWFjdC1uZXh0anMtYWRtaW4tdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0NvbW1hbmQuanM/MzFmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29tbWFuZCA9IHZvaWQgMDtcbnZhciBDb21tYW5kID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbW1hbmQoY29tbWFuZCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB0aGlzLnBlcmZvcm0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbmVnYXRlID0gY29tbWFuZC5wZXJmb3JtKCk7XG4gICAgICAgICAgICAvLyBubyBuZWVkIGZvciBoaXN0b3J5IGlmIG5vbiBuZWdhdGFibGVcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmVnYXRlICE9PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgLy8gcmV0dXJuIGlmIG5vIGhpc3RvcnkgZW5hYmxlZFxuICAgICAgICAgICAgdmFyIGhpc3RvcnkgPSBvcHRpb25zLmhpc3Rvcnk7XG4gICAgICAgICAgICBpZiAoIWhpc3RvcnkpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgLy8gc2luY2Ugd2UgYXJlIHBlcmZvcm1pbmcgdGhlIHNhbWUgYWN0aW9uLCB3ZSdsbCBjbGVhbiB1cCB0aGVcbiAgICAgICAgICAgIC8vIHByZXZpb3VzIGNhbGwgdG8gdGhlIGFjdGlvbiBhbmQgY3JlYXRlIGEgbmV3IGhpc3RvcnkgcmVjb3JkXG4gICAgICAgICAgICBpZiAoX3RoaXMuaGlzdG9yeUl0ZW0pIHtcbiAgICAgICAgICAgICAgICBoaXN0b3J5LnJlbW92ZShfdGhpcy5oaXN0b3J5SXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5oaXN0b3J5SXRlbSA9IGhpc3RvcnkuYWRkKHtcbiAgICAgICAgICAgICAgICBwZXJmb3JtOiBjb21tYW5kLnBlcmZvcm0sXG4gICAgICAgICAgICAgICAgbmVnYXRlOiBuZWdhdGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF90aGlzLmhpc3RvcnkgPSB7XG4gICAgICAgICAgICAgICAgdW5kbzogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGlzdG9yeS51bmRvKF90aGlzLmhpc3RvcnlJdGVtKTsgfSxcbiAgICAgICAgICAgICAgICByZWRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBoaXN0b3J5LnJlZG8oX3RoaXMuaGlzdG9yeUl0ZW0pOyB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIENvbW1hbmQ7XG59KCkpO1xuZXhwb3J0cy5Db21tYW5kID0gQ29tbWFuZDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbW1hbmQiLCJjb21tYW5kIiwib3B0aW9ucyIsIl90aGlzIiwicGVyZm9ybSIsIm5lZ2F0ZSIsImhpc3RvcnkiLCJoaXN0b3J5SXRlbSIsInJlbW92ZSIsImFkZCIsInVuZG8iLCJyZWRvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/Command.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/action/HistoryImpl.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.history = exports.HistoryItemImpl = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar HistoryItemImpl = /** @class */ function() {\n    function HistoryItemImpl(item) {\n        this.perform = item.perform;\n        this.negate = item.negate;\n    }\n    HistoryItemImpl.create = function(item) {\n        return new HistoryItemImpl(item);\n    };\n    return HistoryItemImpl;\n}();\nexports.HistoryItemImpl = HistoryItemImpl;\nvar HistoryImpl = /** @class */ function() {\n    function HistoryImpl() {\n        this.undoStack = [];\n        this.redoStack = [];\n        if (!HistoryImpl.instance) {\n            HistoryImpl.instance = this;\n            this.init();\n        }\n        return HistoryImpl.instance;\n    }\n    HistoryImpl.prototype.init = function() {\n        var _this = this;\n        if (true) return;\n        window.addEventListener(\"keydown\", function(event) {\n            var _a;\n            if (!_this.redoStack.length && !_this.undoStack.length || (0, utils_1.shouldRejectKeystrokes)()) {\n                return;\n            }\n            var key = (_a = event.key) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n            if (event.metaKey && key === \"z\" && event.shiftKey) {\n                _this.redo();\n            } else if (event.metaKey && key === \"z\") {\n                _this.undo();\n            }\n        });\n    };\n    HistoryImpl.prototype.add = function(item) {\n        var historyItem = HistoryItemImpl.create(item);\n        this.undoStack.push(historyItem);\n        return historyItem;\n    };\n    HistoryImpl.prototype.remove = function(item) {\n        var undoIndex = this.undoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (undoIndex !== -1) {\n            this.undoStack.splice(undoIndex, 1);\n            return;\n        }\n        var redoIndex = this.redoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (redoIndex !== -1) {\n            this.redoStack.splice(redoIndex, 1);\n        }\n    };\n    HistoryImpl.prototype.undo = function(item) {\n        // if not undoing a specific item, just undo the latest\n        if (!item) {\n            var item_1 = this.undoStack.pop();\n            if (!item_1) return;\n            item_1 === null || item_1 === void 0 ? void 0 : item_1.negate();\n            this.redoStack.push(item_1);\n            return item_1;\n        }\n        // else undo the specific item\n        var index = this.undoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (index === -1) return;\n        this.undoStack.splice(index, 1);\n        item.negate();\n        this.redoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.redo = function(item) {\n        if (!item) {\n            var item_2 = this.redoStack.pop();\n            if (!item_2) return;\n            item_2 === null || item_2 === void 0 ? void 0 : item_2.perform();\n            this.undoStack.push(item_2);\n            return item_2;\n        }\n        var index = this.redoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (index === -1) return;\n        this.redoStack.splice(index, 1);\n        item.perform();\n        this.undoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.reset = function() {\n        this.undoStack.splice(0);\n        this.redoStack.splice(0);\n    };\n    return HistoryImpl;\n}();\nvar history = new HistoryImpl();\nexports.history = history;\nObject.freeze(history);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/index.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/action/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLElBQUssSUFBSSxJQUFJLENBQUNBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JKLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0sZUFBZSxJQUFLLElBQUksSUFBSSxDQUFDQSxZQUFZLElBQUssU0FBU1AsQ0FBQyxFQUFFUSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS1QsRUFBRyxJQUFJUyxNQUFNLGFBQWEsQ0FBQ1osT0FBT2EsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWIsZ0JBQWdCWSxVQUFTUixHQUFHUztBQUMzSDtBQUNBWiw4Q0FBNkM7SUFBRWdCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0ROLGFBQWFPLG1CQUFPQSxDQUFDLGtGQUFtQixHQUFHTjtBQUMzQ0QsYUFBYU8sbUJBQU9BLENBQUMsd0VBQWMsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRlcmlvLW11aS1yZWFjdC1uZXh0anMtYWRtaW4tdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL2luZGV4LmpzPzY3YTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9BY3Rpb25JbnRlcmZhY2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0FjdGlvbkltcGxcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/index.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/index.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Priority = exports.createAction = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nObject.defineProperty(exports, \"createAction\", ({\n    enumerable: true,\n    get: function() {\n        return utils_1.createAction;\n    }\n}));\nObject.defineProperty(exports, \"Priority\", ({\n    enumerable: true,\n    get: function() {\n        return utils_1.Priority;\n    }\n}));\n__exportStar(__webpack_require__(/*! ./useMatches */ \"(ssr)/./node_modules/kbar/lib/useMatches.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPortal */ \"(ssr)/./node_modules/kbar/lib/KBarPortal.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPositioner */ \"(ssr)/./node_modules/kbar/lib/KBarPositioner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarResults */ \"(ssr)/./node_modules/kbar/lib/KBarResults.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useRegisterActions */ \"(ssr)/./node_modules/kbar/lib/useRegisterActions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarAnimator */ \"(ssr)/./node_modules/kbar/lib/KBarAnimator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./action */ \"(ssr)/./node_modules/kbar/lib/action/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsSUFBSyxJQUFJLElBQUksQ0FBQ0EsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxlQUFlLElBQUssSUFBSSxJQUFJLENBQUNBLFlBQVksSUFBSyxTQUFTUCxDQUFDLEVBQUVRLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLVCxFQUFHLElBQUlTLE1BQU0sYUFBYSxDQUFDWixPQUFPYSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJYixnQkFBZ0JZLFVBQVNSLEdBQUdTO0FBQzNIO0FBQ0FaLDhDQUE2QztJQUFFZ0IsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REwsZ0JBQWdCLEdBQUdBLG9CQUFvQixHQUFHLEtBQUs7QUFDL0MsSUFBSVEsVUFBVUMsbUJBQU9BLENBQUMsdURBQVM7QUFDL0JwQixnREFBK0M7SUFBRVEsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT1UsUUFBUUQsWUFBWTtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3ZIbEIsNENBQTJDO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9VLFFBQVFGLFFBQVE7SUFBRTtBQUFFLENBQUMsRUFBQztBQUMvR1AsYUFBYVUsbUJBQU9BLENBQUMsaUVBQWMsR0FBR1Q7QUFDdENELGFBQWFVLG1CQUFPQSxDQUFDLGlFQUFjLEdBQUdUO0FBQ3RDRCxhQUFhVSxtQkFBT0EsQ0FBQyx5RUFBa0IsR0FBR1Q7QUFDMUNELGFBQWFVLG1CQUFPQSxDQUFDLGlFQUFjLEdBQUdUO0FBQ3RDRCxhQUFhVSxtQkFBT0EsQ0FBQyxtRUFBZSxHQUFHVDtBQUN2Q0QsYUFBYVUsbUJBQU9BLENBQUMsMkRBQVcsR0FBR1Q7QUFDbkNELGFBQWFVLG1CQUFPQSxDQUFDLGlGQUFzQixHQUFHVDtBQUM5Q0QsYUFBYVUsbUJBQU9BLENBQUMsbUZBQXVCLEdBQUdUO0FBQy9DRCxhQUFhVSxtQkFBT0EsQ0FBQyxxRUFBZ0IsR0FBR1Q7QUFDeENELGFBQWFVLG1CQUFPQSxDQUFDLHVEQUFTLEdBQUdUO0FBQ2pDRCxhQUFhVSxtQkFBT0EsQ0FBQywrREFBVSxHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL21hdGVyaW8tbXVpLXJlYWN0LW5leHRqcy1hZG1pbi10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9pbmRleC5qcz9iYWI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByaW9yaXR5ID0gZXhwb3J0cy5jcmVhdGVBY3Rpb24gPSB2b2lkIDA7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQWN0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLmNyZWF0ZUFjdGlvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByaW9yaXR5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLlByaW9yaXR5OyB9IH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VzZU1hdGNoZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJQb3J0YWxcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJQb3NpdGlvbmVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyU2VhcmNoXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyUmVzdWx0c1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXNlS0JhclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXNlUmVnaXN0ZXJBY3Rpb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyQ29udGV4dFByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyQW5pbWF0b3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25cIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsIlByaW9yaXR5IiwiY3JlYXRlQWN0aW9uIiwidXRpbHNfMSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/tinykeys.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/tinykeys.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Fixes special character issues; `?` -> `shift+/` + build issue\n// https://github.com/jamiebuilds/tinykeys\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * These are the modifier keys that change the meaning of keybindings.\n *\n * Note: Ignoring \"AltGraph\" because it is covered by the others.\n */ var KEYBINDING_MODIFIER_KEYS = [\n    \"Shift\",\n    \"Meta\",\n    \"Alt\",\n    \"Control\"\n];\n/**\n * Keybinding sequences should timeout if individual key presses are more than\n * 1s apart by default.\n */ var DEFAULT_TIMEOUT = 1000;\n/**\n * Keybinding sequences should bind to this event by default.\n */ var DEFAULT_EVENT = \"keydown\";\n/**\n * An alias for creating platform-specific keybinding aliases.\n */ var MOD = typeof navigator === \"object\" && /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Meta\" : \"Control\";\n/**\n * There's a bug in Chrome that causes event.getModifierState not to exist on\n * KeyboardEvent's for F1/F2/etc keys.\n */ function getModifierState(event, mod) {\n    return typeof event.getModifierState === \"function\" ? event.getModifierState(mod) : false;\n}\n/**\n * Parses a \"Key Binding String\" into its parts\n *\n * grammar    = `<sequence>`\n * <sequence> = `<press> <press> <press> ...`\n * <press>    = `<key>` or `<mods>+<key>`\n * <mods>     = `<mod>+<mod>+...`\n */ function parse(str) {\n    return str.trim().split(\" \").map(function(press) {\n        var mods = press.split(/\\b\\+/);\n        var key = mods.pop();\n        mods = mods.map(function(mod) {\n            return mod === \"$mod\" ? MOD : mod;\n        });\n        return [\n            mods,\n            key\n        ];\n    });\n}\n/**\n * This tells us if a series of events matches a key binding sequence either\n * partially or exactly.\n */ function match(event, press) {\n    // Special characters; `?` `!`\n    if (/^[^A-Za-z0-9]$/.test(event.key) && press[1] === event.key) {\n        return true;\n    }\n    // prettier-ignore\n    return !(// Allow either the `event.key` or the `event.code`\n    // MDN event.key: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n    // MDN event.code: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n    press[1].toUpperCase() !== event.key.toUpperCase() && press[1] !== event.code || // Ensure all the modifiers in the keybinding are pressed.\n    press[0].find(function(mod) {\n        return !getModifierState(event, mod);\n    }) || // KEYBINDING_MODIFIER_KEYS (Shift/Control/etc) change the meaning of a\n    // keybinding. So if they are pressed but aren't part of the current\n    // keybinding press, then we don't have a match.\n    KEYBINDING_MODIFIER_KEYS.find(function(mod) {\n        return !press[0].includes(mod) && press[1] !== mod && getModifierState(event, mod);\n    }));\n}\n/**\n * Subscribes to keybindings.\n *\n * Returns an unsubscribe method.\n *\n * @example\n * ```js\n * import keybindings from \"../src/keybindings\"\n *\n * keybindings(window, {\n * \t\"Shift+d\": () => {\n * \t\talert(\"The 'Shift' and 'd' keys were pressed at the same time\")\n * \t},\n * \t\"y e e t\": () => {\n * \t\talert(\"The keys 'y', 'e', 'e', and 't' were pressed in order\")\n * \t},\n * \t\"$mod+d\": () => {\n * \t\talert(\"Either 'Control+d' or 'Meta+d' were pressed\")\n * \t},\n * })\n * ```\n */ function keybindings(target, keyBindingMap, options) {\n    var _a, _b;\n    if (options === void 0) {\n        options = {};\n    }\n    var timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : DEFAULT_TIMEOUT;\n    var event = (_b = options.event) !== null && _b !== void 0 ? _b : DEFAULT_EVENT;\n    var keyBindings = Object.keys(keyBindingMap).map(function(key) {\n        return [\n            parse(key),\n            keyBindingMap[key]\n        ];\n    });\n    var possibleMatches = new Map();\n    var timer = null;\n    var onKeyEvent = function(event) {\n        // Ensure and stop any event that isn't a full keyboard event.\n        // Autocomplete option navigation and selection would fire a instanceof Event,\n        // instead of the expected KeyboardEvent\n        if (!(event instanceof KeyboardEvent)) {\n            return;\n        }\n        keyBindings.forEach(function(keyBinding) {\n            var sequence = keyBinding[0];\n            var callback = keyBinding[1];\n            var prev = possibleMatches.get(sequence);\n            var remainingExpectedPresses = prev ? prev : sequence;\n            var currentExpectedPress = remainingExpectedPresses[0];\n            var matches = match(event, currentExpectedPress);\n            if (!matches) {\n                // Modifier keydown events shouldn't break sequences\n                // Note: This works because:\n                // - non-modifiers will always return false\n                // - if the current keypress is a modifier then it will return true when we check its state\n                // MDN: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n                if (!getModifierState(event, event.key)) {\n                    possibleMatches.delete(sequence);\n                }\n            } else if (remainingExpectedPresses.length > 1) {\n                possibleMatches.set(sequence, remainingExpectedPresses.slice(1));\n            } else {\n                possibleMatches.delete(sequence);\n                callback(event);\n            }\n        });\n        if (timer) {\n            clearTimeout(timer);\n        }\n        // @ts-ignore\n        timer = setTimeout(possibleMatches.clear.bind(possibleMatches), timeout);\n    };\n    target.addEventListener(event, onKeyEvent);\n    return function() {\n        target.removeEventListener(event, onKeyEvent);\n    };\n}\nexports[\"default\"] = keybindings;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdGlueWtleXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixpRUFBaUU7QUFDakUsMENBQTBDO0FBQzFDQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RDs7OztDQUlDLEdBQ0QsSUFBSUMsMkJBQTJCO0lBQUM7SUFBUztJQUFRO0lBQU87Q0FBVTtBQUNsRTs7O0NBR0MsR0FDRCxJQUFJQyxrQkFBa0I7QUFDdEI7O0NBRUMsR0FDRCxJQUFJQyxnQkFBZ0I7QUFDcEI7O0NBRUMsR0FDRCxJQUFJQyxNQUFNLE9BQU9DLGNBQWMsWUFDM0IsdUJBQXVCQyxJQUFJLENBQUNELFVBQVVFLFFBQVEsSUFDNUMsU0FDQTtBQUNOOzs7Q0FHQyxHQUNELFNBQVNDLGlCQUFpQkMsS0FBSyxFQUFFQyxHQUFHO0lBQ2hDLE9BQU8sT0FBT0QsTUFBTUQsZ0JBQWdCLEtBQUssYUFDbkNDLE1BQU1ELGdCQUFnQixDQUFDRSxPQUN2QjtBQUNWO0FBQ0E7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNDLE1BQU1DLEdBQUc7SUFDZCxPQUFPQSxJQUNGQyxJQUFJLEdBQ0pDLEtBQUssQ0FBQyxLQUNOQyxHQUFHLENBQUMsU0FBVUMsS0FBSztRQUNwQixJQUFJQyxPQUFPRCxNQUFNRixLQUFLLENBQUM7UUFDdkIsSUFBSUksTUFBTUQsS0FBS0UsR0FBRztRQUNsQkYsT0FBT0EsS0FBS0YsR0FBRyxDQUFDLFNBQVVMLEdBQUc7WUFBSSxPQUFRQSxRQUFRLFNBQVNOLE1BQU1NO1FBQU07UUFDdEUsT0FBTztZQUFDTztZQUFNQztTQUFJO0lBQ3RCO0FBQ0o7QUFDQTs7O0NBR0MsR0FDRCxTQUFTRSxNQUFNWCxLQUFLLEVBQUVPLEtBQUs7SUFDdkIsOEJBQThCO0lBQzlCLElBQUksaUJBQWlCVixJQUFJLENBQUNHLE1BQU1TLEdBQUcsS0FBS0YsS0FBSyxDQUFDLEVBQUUsS0FBS1AsTUFBTVMsR0FBRyxFQUFFO1FBQzVELE9BQU87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QyxrQkFBZSxHQUFHMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRlcmlvLW11aS1yZWFjdC1uZXh0anMtYWRtaW4tdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdGlueWtleXMuanM/OWMzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIEZpeGVzIHNwZWNpYWwgY2hhcmFjdGVyIGlzc3VlczsgYD9gIC0+IGBzaGlmdCsvYCArIGJ1aWxkIGlzc3VlXG4vLyBodHRwczovL2dpdGh1Yi5jb20vamFtaWVidWlsZHMvdGlueWtleXNcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogVGhlc2UgYXJlIHRoZSBtb2RpZmllciBrZXlzIHRoYXQgY2hhbmdlIHRoZSBtZWFuaW5nIG9mIGtleWJpbmRpbmdzLlxuICpcbiAqIE5vdGU6IElnbm9yaW5nIFwiQWx0R3JhcGhcIiBiZWNhdXNlIGl0IGlzIGNvdmVyZWQgYnkgdGhlIG90aGVycy5cbiAqL1xudmFyIEtFWUJJTkRJTkdfTU9ESUZJRVJfS0VZUyA9IFtcIlNoaWZ0XCIsIFwiTWV0YVwiLCBcIkFsdFwiLCBcIkNvbnRyb2xcIl07XG4vKipcbiAqIEtleWJpbmRpbmcgc2VxdWVuY2VzIHNob3VsZCB0aW1lb3V0IGlmIGluZGl2aWR1YWwga2V5IHByZXNzZXMgYXJlIG1vcmUgdGhhblxuICogMXMgYXBhcnQgYnkgZGVmYXVsdC5cbiAqL1xudmFyIERFRkFVTFRfVElNRU9VVCA9IDEwMDA7XG4vKipcbiAqIEtleWJpbmRpbmcgc2VxdWVuY2VzIHNob3VsZCBiaW5kIHRvIHRoaXMgZXZlbnQgYnkgZGVmYXVsdC5cbiAqL1xudmFyIERFRkFVTFRfRVZFTlQgPSBcImtleWRvd25cIjtcbi8qKlxuICogQW4gYWxpYXMgZm9yIGNyZWF0aW5nIHBsYXRmb3JtLXNwZWNpZmljIGtleWJpbmRpbmcgYWxpYXNlcy5cbiAqL1xudmFyIE1PRCA9IHR5cGVvZiBuYXZpZ2F0b3IgPT09IFwib2JqZWN0XCIgJiZcbiAgICAvTWFjfGlQb2R8aVBob25lfGlQYWQvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKVxuICAgID8gXCJNZXRhXCJcbiAgICA6IFwiQ29udHJvbFwiO1xuLyoqXG4gKiBUaGVyZSdzIGEgYnVnIGluIENocm9tZSB0aGF0IGNhdXNlcyBldmVudC5nZXRNb2RpZmllclN0YXRlIG5vdCB0byBleGlzdCBvblxuICogS2V5Ym9hcmRFdmVudCdzIGZvciBGMS9GMi9ldGMga2V5cy5cbiAqL1xuZnVuY3Rpb24gZ2V0TW9kaWZpZXJTdGF0ZShldmVudCwgbW9kKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBldmVudC5nZXRNb2RpZmllclN0YXRlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgPyBldmVudC5nZXRNb2RpZmllclN0YXRlKG1vZClcbiAgICAgICAgOiBmYWxzZTtcbn1cbi8qKlxuICogUGFyc2VzIGEgXCJLZXkgQmluZGluZyBTdHJpbmdcIiBpbnRvIGl0cyBwYXJ0c1xuICpcbiAqIGdyYW1tYXIgICAgPSBgPHNlcXVlbmNlPmBcbiAqIDxzZXF1ZW5jZT4gPSBgPHByZXNzPiA8cHJlc3M+IDxwcmVzcz4gLi4uYFxuICogPHByZXNzPiAgICA9IGA8a2V5PmAgb3IgYDxtb2RzPis8a2V5PmBcbiAqIDxtb2RzPiAgICAgPSBgPG1vZD4rPG1vZD4rLi4uYFxuICovXG5mdW5jdGlvbiBwYXJzZShzdHIpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC50cmltKClcbiAgICAgICAgLnNwbGl0KFwiIFwiKVxuICAgICAgICAubWFwKGZ1bmN0aW9uIChwcmVzcykge1xuICAgICAgICB2YXIgbW9kcyA9IHByZXNzLnNwbGl0KC9cXGJcXCsvKTtcbiAgICAgICAgdmFyIGtleSA9IG1vZHMucG9wKCk7XG4gICAgICAgIG1vZHMgPSBtb2RzLm1hcChmdW5jdGlvbiAobW9kKSB7IHJldHVybiAobW9kID09PSBcIiRtb2RcIiA/IE1PRCA6IG1vZCk7IH0pO1xuICAgICAgICByZXR1cm4gW21vZHMsIGtleV07XG4gICAgfSk7XG59XG4vKipcbiAqIFRoaXMgdGVsbHMgdXMgaWYgYSBzZXJpZXMgb2YgZXZlbnRzIG1hdGNoZXMgYSBrZXkgYmluZGluZyBzZXF1ZW5jZSBlaXRoZXJcbiAqIHBhcnRpYWxseSBvciBleGFjdGx5LlxuICovXG5mdW5jdGlvbiBtYXRjaChldmVudCwgcHJlc3MpIHtcbiAgICAvLyBTcGVjaWFsIGNoYXJhY3RlcnM7IGA/YCBgIWBcbiAgICBpZiAoL15bXkEtWmEtejAtOV0kLy50ZXN0KGV2ZW50LmtleSkgJiYgcHJlc3NbMV0gPT09IGV2ZW50LmtleSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgcmV0dXJuICEoXG4gICAgLy8gQWxsb3cgZWl0aGVyIHRoZSBgZXZlbnQua2V5YCBvciB0aGUgYGV2ZW50LmNvZGVgXG4gICAgLy8gTUROIGV2ZW50LmtleTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0tleWJvYXJkRXZlbnQva2V5XG4gICAgLy8gTUROIGV2ZW50LmNvZGU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9LZXlib2FyZEV2ZW50L2NvZGVcbiAgICAocHJlc3NbMV0udG9VcHBlckNhc2UoKSAhPT0gZXZlbnQua2V5LnRvVXBwZXJDYXNlKCkgJiZcbiAgICAgICAgcHJlc3NbMV0gIT09IGV2ZW50LmNvZGUpIHx8XG4gICAgICAgIC8vIEVuc3VyZSBhbGwgdGhlIG1vZGlmaWVycyBpbiB0aGUga2V5YmluZGluZyBhcmUgcHJlc3NlZC5cbiAgICAgICAgcHJlc3NbMF0uZmluZChmdW5jdGlvbiAobW9kKSB7XG4gICAgICAgICAgICByZXR1cm4gIWdldE1vZGlmaWVyU3RhdGUoZXZlbnQsIG1vZCk7XG4gICAgICAgIH0pIHx8XG4gICAgICAgIC8vIEtFWUJJTkRJTkdfTU9ESUZJRVJfS0VZUyAoU2hpZnQvQ29udHJvbC9ldGMpIGNoYW5nZSB0aGUgbWVhbmluZyBvZiBhXG4gICAgICAgIC8vIGtleWJpbmRpbmcuIFNvIGlmIHRoZXkgYXJlIHByZXNzZWQgYnV0IGFyZW4ndCBwYXJ0IG9mIHRoZSBjdXJyZW50XG4gICAgICAgIC8vIGtleWJpbmRpbmcgcHJlc3MsIHRoZW4gd2UgZG9uJ3QgaGF2ZSBhIG1hdGNoLlxuICAgICAgICBLRVlCSU5ESU5HX01PRElGSUVSX0tFWVMuZmluZChmdW5jdGlvbiAobW9kKSB7XG4gICAgICAgICAgICByZXR1cm4gIXByZXNzWzBdLmluY2x1ZGVzKG1vZCkgJiYgcHJlc3NbMV0gIT09IG1vZCAmJiBnZXRNb2RpZmllclN0YXRlKGV2ZW50LCBtb2QpO1xuICAgICAgICB9KSk7XG59XG4vKipcbiAqIFN1YnNjcmliZXMgdG8ga2V5YmluZGluZ3MuXG4gKlxuICogUmV0dXJucyBhbiB1bnN1YnNjcmliZSBtZXRob2QuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiBpbXBvcnQga2V5YmluZGluZ3MgZnJvbSBcIi4uL3NyYy9rZXliaW5kaW5nc1wiXG4gKlxuICoga2V5YmluZGluZ3Mod2luZG93LCB7XG4gKiBcdFwiU2hpZnQrZFwiOiAoKSA9PiB7XG4gKiBcdFx0YWxlcnQoXCJUaGUgJ1NoaWZ0JyBhbmQgJ2QnIGtleXMgd2VyZSBwcmVzc2VkIGF0IHRoZSBzYW1lIHRpbWVcIilcbiAqIFx0fSxcbiAqIFx0XCJ5IGUgZSB0XCI6ICgpID0+IHtcbiAqIFx0XHRhbGVydChcIlRoZSBrZXlzICd5JywgJ2UnLCAnZScsIGFuZCAndCcgd2VyZSBwcmVzc2VkIGluIG9yZGVyXCIpXG4gKiBcdH0sXG4gKiBcdFwiJG1vZCtkXCI6ICgpID0+IHtcbiAqIFx0XHRhbGVydChcIkVpdGhlciAnQ29udHJvbCtkJyBvciAnTWV0YStkJyB3ZXJlIHByZXNzZWRcIilcbiAqIFx0fSxcbiAqIH0pXG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24ga2V5YmluZGluZ3ModGFyZ2V0LCBrZXlCaW5kaW5nTWFwLCBvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciB0aW1lb3V0ID0gKF9hID0gb3B0aW9ucy50aW1lb3V0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBERUZBVUxUX1RJTUVPVVQ7XG4gICAgdmFyIGV2ZW50ID0gKF9iID0gb3B0aW9ucy5ldmVudCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogREVGQVVMVF9FVkVOVDtcbiAgICB2YXIga2V5QmluZGluZ3MgPSBPYmplY3Qua2V5cyhrZXlCaW5kaW5nTWFwKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICByZXR1cm4gW3BhcnNlKGtleSksIGtleUJpbmRpbmdNYXBba2V5XV07XG4gICAgfSk7XG4gICAgdmFyIHBvc3NpYmxlTWF0Y2hlcyA9IG5ldyBNYXAoKTtcbiAgICB2YXIgdGltZXIgPSBudWxsO1xuICAgIHZhciBvbktleUV2ZW50ID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIC8vIEVuc3VyZSBhbmQgc3RvcCBhbnkgZXZlbnQgdGhhdCBpc24ndCBhIGZ1bGwga2V5Ym9hcmQgZXZlbnQuXG4gICAgICAgIC8vIEF1dG9jb21wbGV0ZSBvcHRpb24gbmF2aWdhdGlvbiBhbmQgc2VsZWN0aW9uIHdvdWxkIGZpcmUgYSBpbnN0YW5jZW9mIEV2ZW50LFxuICAgICAgICAvLyBpbnN0ZWFkIG9mIHRoZSBleHBlY3RlZCBLZXlib2FyZEV2ZW50XG4gICAgICAgIGlmICghKGV2ZW50IGluc3RhbmNlb2YgS2V5Ym9hcmRFdmVudCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBrZXlCaW5kaW5ncy5mb3JFYWNoKGZ1bmN0aW9uIChrZXlCaW5kaW5nKSB7XG4gICAgICAgICAgICB2YXIgc2VxdWVuY2UgPSBrZXlCaW5kaW5nWzBdO1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrID0ga2V5QmluZGluZ1sxXTtcbiAgICAgICAgICAgIHZhciBwcmV2ID0gcG9zc2libGVNYXRjaGVzLmdldChzZXF1ZW5jZSk7XG4gICAgICAgICAgICB2YXIgcmVtYWluaW5nRXhwZWN0ZWRQcmVzc2VzID0gcHJldiA/IHByZXYgOiBzZXF1ZW5jZTtcbiAgICAgICAgICAgIHZhciBjdXJyZW50RXhwZWN0ZWRQcmVzcyA9IHJlbWFpbmluZ0V4cGVjdGVkUHJlc3Nlc1swXTtcbiAgICAgICAgICAgIHZhciBtYXRjaGVzID0gbWF0Y2goZXZlbnQsIGN1cnJlbnRFeHBlY3RlZFByZXNzKTtcbiAgICAgICAgICAgIGlmICghbWF0Y2hlcykge1xuICAgICAgICAgICAgICAgIC8vIE1vZGlmaWVyIGtleWRvd24gZXZlbnRzIHNob3VsZG4ndCBicmVhayBzZXF1ZW5jZXNcbiAgICAgICAgICAgICAgICAvLyBOb3RlOiBUaGlzIHdvcmtzIGJlY2F1c2U6XG4gICAgICAgICAgICAgICAgLy8gLSBub24tbW9kaWZpZXJzIHdpbGwgYWx3YXlzIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgICAgIC8vIC0gaWYgdGhlIGN1cnJlbnQga2V5cHJlc3MgaXMgYSBtb2RpZmllciB0aGVuIGl0IHdpbGwgcmV0dXJuIHRydWUgd2hlbiB3ZSBjaGVjayBpdHMgc3RhdGVcbiAgICAgICAgICAgICAgICAvLyBNRE46IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9LZXlib2FyZEV2ZW50L2dldE1vZGlmaWVyU3RhdGVcbiAgICAgICAgICAgICAgICBpZiAoIWdldE1vZGlmaWVyU3RhdGUoZXZlbnQsIGV2ZW50LmtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zc2libGVNYXRjaGVzLmRlbGV0ZShzZXF1ZW5jZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVtYWluaW5nRXhwZWN0ZWRQcmVzc2VzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICBwb3NzaWJsZU1hdGNoZXMuc2V0KHNlcXVlbmNlLCByZW1haW5pbmdFeHBlY3RlZFByZXNzZXMuc2xpY2UoMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcG9zc2libGVNYXRjaGVzLmRlbGV0ZShzZXF1ZW5jZSk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KHBvc3NpYmxlTWF0Y2hlcy5jbGVhci5iaW5kKHBvc3NpYmxlTWF0Y2hlcyksIHRpbWVvdXQpO1xuICAgIH07XG4gICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIG9uS2V5RXZlbnQpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBvbktleUV2ZW50KTtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0ga2V5YmluZGluZ3M7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJLRVlCSU5ESU5HX01PRElGSUVSX0tFWVMiLCJERUZBVUxUX1RJTUVPVVQiLCJERUZBVUxUX0VWRU5UIiwiTU9EIiwibmF2aWdhdG9yIiwidGVzdCIsInBsYXRmb3JtIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsImV2ZW50IiwibW9kIiwicGFyc2UiLCJzdHIiLCJ0cmltIiwic3BsaXQiLCJtYXAiLCJwcmVzcyIsIm1vZHMiLCJrZXkiLCJwb3AiLCJtYXRjaCIsInRvVXBwZXJDYXNlIiwiY29kZSIsImZpbmQiLCJpbmNsdWRlcyIsImtleWJpbmRpbmdzIiwidGFyZ2V0Iiwia2V5QmluZGluZ01hcCIsIm9wdGlvbnMiLCJfYSIsIl9iIiwidGltZW91dCIsImtleUJpbmRpbmdzIiwia2V5cyIsInBvc3NpYmxlTWF0Y2hlcyIsIk1hcCIsInRpbWVyIiwib25LZXlFdmVudCIsIktleWJvYXJkRXZlbnQiLCJmb3JFYWNoIiwia2V5QmluZGluZyIsInNlcXVlbmNlIiwiY2FsbGJhY2siLCJwcmV2IiwiZ2V0IiwicmVtYWluaW5nRXhwZWN0ZWRQcmVzc2VzIiwiY3VycmVudEV4cGVjdGVkUHJlc3MiLCJtYXRjaGVzIiwiZGVsZXRlIiwibGVuZ3RoIiwic2V0Iiwic2xpY2UiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiY2xlYXIiLCJiaW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/tinykeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/types.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/types.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.VisualState = void 0;\nvar VisualState;\n(function(VisualState) {\n    VisualState[\"animatingIn\"] = \"animating-in\";\n    VisualState[\"showing\"] = \"showing\";\n    VisualState[\"animatingOut\"] = \"animating-out\";\n    VisualState[\"hidden\"] = \"hidden\";\n})(VisualState = exports.VisualState || (exports.VisualState = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsSUFBSUU7QUFDSCxVQUFVQSxXQUFXO0lBQ2xCQSxXQUFXLENBQUMsY0FBYyxHQUFHO0lBQzdCQSxXQUFXLENBQUMsVUFBVSxHQUFHO0lBQ3pCQSxXQUFXLENBQUMsZUFBZSxHQUFHO0lBQzlCQSxXQUFXLENBQUMsU0FBUyxHQUFHO0FBQzVCLEdBQUdBLGNBQWNGLFFBQVFFLFdBQVcsSUFBS0YsQ0FBQUEsbUJBQW1CLEdBQUcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21hdGVyaW8tbXVpLXJlYWN0LW5leHRqcy1hZG1pbi10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi90eXBlcy5qcz80NjlkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WaXN1YWxTdGF0ZSA9IHZvaWQgMDtcbnZhciBWaXN1YWxTdGF0ZTtcbihmdW5jdGlvbiAoVmlzdWFsU3RhdGUpIHtcbiAgICBWaXN1YWxTdGF0ZVtcImFuaW1hdGluZ0luXCJdID0gXCJhbmltYXRpbmctaW5cIjtcbiAgICBWaXN1YWxTdGF0ZVtcInNob3dpbmdcIl0gPSBcInNob3dpbmdcIjtcbiAgICBWaXN1YWxTdGF0ZVtcImFuaW1hdGluZ091dFwiXSA9IFwiYW5pbWF0aW5nLW91dFwiO1xuICAgIFZpc3VhbFN0YXRlW1wiaGlkZGVuXCJdID0gXCJoaWRkZW5cIjtcbn0pKFZpc3VhbFN0YXRlID0gZXhwb3J0cy5WaXN1YWxTdGF0ZSB8fCAoZXhwb3J0cy5WaXN1YWxTdGF0ZSA9IHt9KSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJWaXN1YWxTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useKBar.js":
/*!******************************************!*\
  !*** ./node_modules/kbar/lib/useKBar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useKBar = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar KBarContextProvider_1 = __webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\");\nfunction useKBar(collector) {\n    var _a = React.useContext(KBarContextProvider_1.KBarContext), query = _a.query, getState = _a.getState, subscribe = _a.subscribe, options = _a.options;\n    var collected = React.useRef(collector === null || collector === void 0 ? void 0 : collector(getState()));\n    var collectorRef = React.useRef(collector);\n    var onCollect = React.useCallback(function(collected) {\n        return __assign(__assign({}, collected), {\n            query: query,\n            options: options\n        });\n    }, [\n        query,\n        options\n    ]);\n    var _b = React.useState(onCollect(collected.current)), render = _b[0], setRender = _b[1];\n    React.useEffect(function() {\n        var unsubscribe;\n        if (collectorRef.current) {\n            unsubscribe = subscribe(function(current) {\n                return collectorRef.current(current);\n            }, function(collected) {\n                return setRender(onCollect(collected));\n            });\n        }\n        return function() {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [\n        onCollect,\n        subscribe\n    ]);\n    return render;\n}\nexports.useKBar = useKBar;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlS0Jhci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFdBQVcsSUFBSyxJQUFJLElBQUksQ0FBQ0EsUUFBUSxJQUFLO0lBQ3RDQSxXQUFXQyxPQUFPQyxNQUFNLElBQUksU0FBU0MsQ0FBQztRQUNsQyxJQUFLLElBQUlDLEdBQUdDLElBQUksR0FBR0MsSUFBSUMsVUFBVUMsTUFBTSxFQUFFSCxJQUFJQyxHQUFHRCxJQUFLO1lBQ2pERCxJQUFJRyxTQUFTLENBQUNGLEVBQUU7WUFDaEIsSUFBSyxJQUFJSSxLQUFLTCxFQUFHLElBQUlILE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQ3pETixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQ25CO1FBQ0EsT0FBT047SUFDWDtJQUNBLE9BQU9ILFNBQVNhLEtBQUssQ0FBQyxJQUFJLEVBQUVOO0FBQ2hDO0FBQ0EsSUFBSU8sa0JBQWtCLElBQUssSUFBSSxJQUFJLENBQUNBLGVBQWUsSUFBTWIsQ0FBQUEsT0FBT2MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JqQixPQUFPb0IsY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxxQkFBcUIsSUFBSyxJQUFJLElBQUksQ0FBQ0Esa0JBQWtCLElBQU12QixDQUFBQSxPQUFPYyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFUyxDQUFDO0lBQ3pGeEIsT0FBT29CLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsSUFBSyxJQUFJLElBQUksQ0FBQ0EsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSUMsVUFBVSxFQUFFLE9BQU9EO0lBQ2xDLElBQUlFLFNBQVMsQ0FBQztJQUNkLElBQUlGLE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSVYsS0FBS1UsSUFBSyxJQUFJVixNQUFNLGFBQWFqQixPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDZ0IsS0FBS1YsSUFBSUosZ0JBQWdCZ0IsUUFBUUYsS0FBS1Y7SUFBRTtJQUN4SU0sbUJBQW1CTSxRQUFRRjtJQUMzQixPQUFPRTtBQUNYO0FBQ0E3Qiw4Q0FBNkM7SUFBRXlCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RLLGVBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlFLFFBQVFOLGFBQWFPLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ3hDLElBQUlDLHdCQUF3QkQsbUJBQU9BLENBQUMsbUZBQXVCO0FBQzNELFNBQVNGLFFBQVFJLFNBQVM7SUFDdEIsSUFBSUMsS0FBS0osTUFBTUssVUFBVSxDQUFDSCxzQkFBc0JJLFdBQVcsR0FBR0MsUUFBUUgsR0FBR0csS0FBSyxFQUFFQyxXQUFXSixHQUFHSSxRQUFRLEVBQUVDLFlBQVlMLEdBQUdLLFNBQVMsRUFBRUMsVUFBVU4sR0FBR00sT0FBTztJQUN0SixJQUFJQyxZQUFZWCxNQUFNWSxNQUFNLENBQUNULGNBQWMsUUFBUUEsY0FBYyxLQUFLLElBQUksS0FBSyxJQUFJQSxVQUFVSztJQUM3RixJQUFJSyxlQUFlYixNQUFNWSxNQUFNLENBQUNUO0lBQ2hDLElBQUlXLFlBQVlkLE1BQU1lLFdBQVcsQ0FBQyxTQUFVSixTQUFTO1FBQUksT0FBUTVDLFNBQVNBLFNBQVMsQ0FBQyxHQUFHNEMsWUFBWTtZQUFFSixPQUFPQTtZQUFPRyxTQUFTQTtRQUFRO0lBQUssR0FBRztRQUFDSDtRQUFPRztLQUFRO0lBQzVKLElBQUlNLEtBQUtoQixNQUFNaUIsUUFBUSxDQUFDSCxVQUFVSCxVQUFVTyxPQUFPLElBQUlDLFNBQVNILEVBQUUsQ0FBQyxFQUFFLEVBQUVJLFlBQVlKLEVBQUUsQ0FBQyxFQUFFO0lBQ3hGaEIsTUFBTXFCLFNBQVMsQ0FBQztRQUNaLElBQUlDO1FBQ0osSUFBSVQsYUFBYUssT0FBTyxFQUFFO1lBQ3RCSSxjQUFjYixVQUFVLFNBQVVTLE9BQU87Z0JBQUksT0FBT0wsYUFBYUssT0FBTyxDQUFDQTtZQUFVLEdBQUcsU0FBVVAsU0FBUztnQkFBSSxPQUFPUyxVQUFVTixVQUFVSDtZQUFhO1FBQ3pKO1FBQ0EsT0FBTztZQUNILElBQUlXLGFBQWE7Z0JBQ2JBO1lBQ0o7UUFDSjtJQUNKLEdBQUc7UUFBQ1I7UUFBV0w7S0FBVTtJQUN6QixPQUFPVTtBQUNYO0FBQ0FyQixlQUFlLEdBQUdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0ZXJpby1tdWktcmVhY3QtbmV4dGpzLWFkbWluLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL3VzZUtCYXIuanM/YmY2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlS0JhciA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIEtCYXJDb250ZXh0UHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL0tCYXJDb250ZXh0UHJvdmlkZXJcIik7XG5mdW5jdGlvbiB1c2VLQmFyKGNvbGxlY3Rvcikge1xuICAgIHZhciBfYSA9IFJlYWN0LnVzZUNvbnRleHQoS0JhckNvbnRleHRQcm92aWRlcl8xLktCYXJDb250ZXh0KSwgcXVlcnkgPSBfYS5xdWVyeSwgZ2V0U3RhdGUgPSBfYS5nZXRTdGF0ZSwgc3Vic2NyaWJlID0gX2Euc3Vic2NyaWJlLCBvcHRpb25zID0gX2Eub3B0aW9ucztcbiAgICB2YXIgY29sbGVjdGVkID0gUmVhY3QudXNlUmVmKGNvbGxlY3RvciA9PT0gbnVsbCB8fCBjb2xsZWN0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbGxlY3RvcihnZXRTdGF0ZSgpKSk7XG4gICAgdmFyIGNvbGxlY3RvclJlZiA9IFJlYWN0LnVzZVJlZihjb2xsZWN0b3IpO1xuICAgIHZhciBvbkNvbGxlY3QgPSBSZWFjdC51c2VDYWxsYmFjayhmdW5jdGlvbiAoY29sbGVjdGVkKSB7IHJldHVybiAoX19hc3NpZ24oX19hc3NpZ24oe30sIGNvbGxlY3RlZCksIHsgcXVlcnk6IHF1ZXJ5LCBvcHRpb25zOiBvcHRpb25zIH0pKTsgfSwgW3F1ZXJ5LCBvcHRpb25zXSk7XG4gICAgdmFyIF9iID0gUmVhY3QudXNlU3RhdGUob25Db2xsZWN0KGNvbGxlY3RlZC5jdXJyZW50KSksIHJlbmRlciA9IF9iWzBdLCBzZXRSZW5kZXIgPSBfYlsxXTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdW5zdWJzY3JpYmU7XG4gICAgICAgIGlmIChjb2xsZWN0b3JSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUgPSBzdWJzY3JpYmUoZnVuY3Rpb24gKGN1cnJlbnQpIHsgcmV0dXJuIGNvbGxlY3RvclJlZi5jdXJyZW50KGN1cnJlbnQpOyB9LCBmdW5jdGlvbiAoY29sbGVjdGVkKSB7IHJldHVybiBzZXRSZW5kZXIob25Db2xsZWN0KGNvbGxlY3RlZCkpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHVuc3Vic2NyaWJlKSB7XG4gICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9LCBbb25Db2xsZWN0LCBzdWJzY3JpYmVdKTtcbiAgICByZXR1cm4gcmVuZGVyO1xufVxuZXhwb3J0cy51c2VLQmFyID0gdXNlS0JhcjtcbiJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfX2NyZWF0ZUJpbmRpbmciLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJleHBvcnRzIiwidXNlS0JhciIsIlJlYWN0IiwicmVxdWlyZSIsIktCYXJDb250ZXh0UHJvdmlkZXJfMSIsImNvbGxlY3RvciIsIl9hIiwidXNlQ29udGV4dCIsIktCYXJDb250ZXh0IiwicXVlcnkiLCJnZXRTdGF0ZSIsInN1YnNjcmliZSIsIm9wdGlvbnMiLCJjb2xsZWN0ZWQiLCJ1c2VSZWYiLCJjb2xsZWN0b3JSZWYiLCJvbkNvbGxlY3QiLCJ1c2VDYWxsYmFjayIsIl9iIiwidXNlU3RhdGUiLCJjdXJyZW50IiwicmVuZGVyIiwic2V0UmVuZGVyIiwidXNlRWZmZWN0IiwidW5zdWJzY3JpYmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useKBar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/useMatches.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useDeepMatches = exports.useMatches = exports.NO_GROUP = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar fuse_js_1 = __importDefault(__webpack_require__(/*! fuse.js */ \"(ssr)/./node_modules/fuse.js/dist/fuse.esm.js\"));\nexports.NO_GROUP = {\n    name: \"none\",\n    priority: utils_1.Priority.NORMAL\n};\nvar fuseOptions = {\n    keys: [\n        {\n            name: \"name\",\n            weight: 0.5\n        },\n        {\n            name: \"keywords\",\n            getFn: function(item) {\n                var _a;\n                return ((_a = item.keywords) !== null && _a !== void 0 ? _a : \"\").split(\",\");\n            },\n            weight: 0.5\n        },\n        \"subtitle\"\n    ],\n    ignoreLocation: true,\n    includeScore: true,\n    includeMatches: true,\n    threshold: 0.2,\n    minMatchCharLength: 1\n};\nfunction order(a, b) {\n    /**\n     * Larger the priority = higher up the list\n     */ return b.priority - a.priority;\n}\n/**\n * returns deep matches only when a search query is present\n */ function useMatches() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            actions: state.actions,\n            rootActionId: state.currentRootActionId\n        };\n    }), search = _a.search, actions = _a.actions, rootActionId = _a.rootActionId;\n    var rootResults = React.useMemo(function() {\n        return Object.keys(actions).reduce(function(acc, actionId) {\n            var action = actions[actionId];\n            if (!action.parent && !rootActionId) {\n                acc.push(action);\n            }\n            if (action.id === rootActionId) {\n                for(var i = 0; i < action.children.length; i++){\n                    acc.push(action.children[i]);\n                }\n            }\n            return acc;\n        }, []).sort(order);\n    }, [\n        actions,\n        rootActionId\n    ]);\n    var getDeepResults = React.useCallback(function(actions) {\n        var actionsClone = [];\n        for(var i = 0; i < actions.length; i++){\n            actionsClone.push(actions[i]);\n        }\n        return function collectChildren(actions, all) {\n            if (all === void 0) {\n                all = actionsClone;\n            }\n            for(var i = 0; i < actions.length; i++){\n                if (actions[i].children.length > 0) {\n                    var childsChildren = actions[i].children;\n                    for(var i_1 = 0; i_1 < childsChildren.length; i_1++){\n                        all.push(childsChildren[i_1]);\n                    }\n                    collectChildren(actions[i].children, all);\n                }\n            }\n            return all;\n        }(actions);\n    }, []);\n    var emptySearch = !search;\n    var filtered = React.useMemo(function() {\n        if (emptySearch) return rootResults;\n        return getDeepResults(rootResults);\n    }, [\n        getDeepResults,\n        rootResults,\n        emptySearch\n    ]);\n    var fuse = React.useMemo(function() {\n        return new fuse_js_1.default(filtered, fuseOptions);\n    }, [\n        filtered\n    ]);\n    var matches = useInternalMatches(filtered, search, fuse);\n    var results = React.useMemo(function() {\n        var _a, _b;\n        /**\n         * Store a reference to a section and it's list of actions.\n         * Alongside these actions, we'll keep a temporary record of the\n         * final priority calculated by taking the commandScore + the\n         * explicitly set `action.priority` value.\n         */ var map = {};\n        /**\n         * Store another reference to a list of sections alongside\n         * the section's final priority, calculated the same as above.\n         */ var list = [];\n        /**\n         * We'll take the list above and sort by its priority. Then we'll\n         * collect all actions from the map above for this specific name and\n         * sort by its priority as well.\n         */ var ordered = [];\n        for(var i = 0; i < matches.length; i++){\n            var match = matches[i];\n            var action = match.action;\n            var score = match.score || utils_1.Priority.NORMAL;\n            var section = {\n                name: typeof action.section === \"string\" ? action.section : ((_a = action.section) === null || _a === void 0 ? void 0 : _a.name) || exports.NO_GROUP.name,\n                priority: typeof action.section === \"string\" ? score : ((_b = action.section) === null || _b === void 0 ? void 0 : _b.priority) || 0 + score\n            };\n            if (!map[section.name]) {\n                map[section.name] = [];\n                list.push(section);\n            }\n            map[section.name].push({\n                priority: action.priority + score,\n                action: action\n            });\n        }\n        ordered = list.sort(order).map(function(group) {\n            return {\n                name: group.name,\n                actions: map[group.name].sort(order).map(function(item) {\n                    return item.action;\n                })\n            };\n        });\n        /**\n         * Our final result is simply flattening the ordered list into\n         * our familiar (ActionImpl | string)[] shape.\n         */ var results = [];\n        for(var i = 0; i < ordered.length; i++){\n            var group = ordered[i];\n            if (group.name !== exports.NO_GROUP.name) results.push(group.name);\n            for(var i_2 = 0; i_2 < group.actions.length; i_2++){\n                results.push(group.actions[i_2]);\n            }\n        }\n        return results;\n    }, [\n        matches\n    ]);\n    // ensure that users have an accurate `currentRootActionId`\n    // that syncs with the throttled return value.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var memoRootActionId = React.useMemo(function() {\n        return rootActionId;\n    }, [\n        results\n    ]);\n    return React.useMemo(function() {\n        return {\n            results: results,\n            rootActionId: memoRootActionId\n        };\n    }, [\n        memoRootActionId,\n        results\n    ]);\n}\nexports.useMatches = useMatches;\nfunction useInternalMatches(filtered, search, fuse) {\n    var value = React.useMemo(function() {\n        return {\n            filtered: filtered,\n            search: search\n        };\n    }, [\n        filtered,\n        search\n    ]);\n    var _a = (0, utils_1.useThrottledValue)(value), throttledFiltered = _a.filtered, throttledSearch = _a.search;\n    return React.useMemo(function() {\n        if (throttledSearch.trim() === \"\") {\n            return throttledFiltered.map(function(action) {\n                return {\n                    score: 0,\n                    action: action\n                };\n            });\n        }\n        var matches = [];\n        // Use Fuse's `search` method to perform the search efficiently\n        var searchResults = fuse.search(throttledSearch);\n        // Format the search results to match the existing structure\n        matches = searchResults.map(function(_a) {\n            var action = _a.item, score = _a.score;\n            return {\n                score: 1 / ((score !== null && score !== void 0 ? score : 0) + 1),\n                action: action\n            };\n        });\n        return matches;\n    }, [\n        throttledFiltered,\n        throttledSearch,\n        fuse\n    ]);\n}\n/**\n * @deprecated use useMatches\n */ exports.useDeepMatches = useMatches;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useMatches.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useRegisterActions.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/useRegisterActions.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useRegisterActions = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction useRegisterActions(actions, dependencies) {\n    if (dependencies === void 0) {\n        dependencies = [];\n    }\n    var query = (0, useKBar_1.useKBar)().query;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var actionsCache = React.useMemo(function() {\n        return actions;\n    }, dependencies);\n    React.useEffect(function() {\n        if (!actionsCache.length) {\n            return;\n        }\n        var unregister = query.registerActions(actionsCache);\n        return function() {\n            unregister();\n        };\n    }, [\n        query,\n        actionsCache\n    ]);\n}\nexports.useRegisterActions = useRegisterActions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlUmVnaXN0ZXJBY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLElBQUssSUFBSSxJQUFJLENBQUNBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JKLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLElBQUssSUFBSSxJQUFJLENBQUNBLGtCQUFrQixJQUFNVixDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFUyxDQUFDO0lBQ3pGWCxPQUFPTyxjQUFjLENBQUNMLEdBQUcsV0FBVztRQUFFTSxZQUFZO1FBQU1JLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTVCxDQUFDLEVBQUVTLENBQUM7SUFDZFQsQ0FBQyxDQUFDLFVBQVUsR0FBR1M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLElBQUssSUFBSSxJQUFJLENBQUNBLFlBQVksSUFBSyxTQUFVQyxHQUFHO0lBQzNELElBQUlBLE9BQU9BLElBQUlDLFVBQVUsRUFBRSxPQUFPRDtJQUNsQyxJQUFJRSxTQUFTLENBQUM7SUFDZCxJQUFJRixPQUFPLE1BQU07UUFBQSxJQUFLLElBQUlWLEtBQUtVLElBQUssSUFBSVYsTUFBTSxhQUFhSixPQUFPaUIsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0wsS0FBS1YsSUFBSUwsZ0JBQWdCaUIsUUFBUUYsS0FBS1Y7SUFBRTtJQUN4SU0sbUJBQW1CTSxRQUFRRjtJQUMzQixPQUFPRTtBQUNYO0FBQ0FoQiw4Q0FBNkM7SUFBRVksT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RFEsMEJBQTBCLEdBQUcsS0FBSztBQUNsQyxJQUFJRSxRQUFRVCxhQUFhVSxtQkFBT0EsQ0FBQyx3R0FBTztBQUN4QyxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQywyREFBVztBQUNuQyxTQUFTRixtQkFBbUJJLE9BQU8sRUFBRUMsWUFBWTtJQUM3QyxJQUFJQSxpQkFBaUIsS0FBSyxHQUFHO1FBQUVBLGVBQWUsRUFBRTtJQUFFO0lBQ2xELElBQUlDLFFBQVEsQ0FBQyxHQUFHSCxVQUFVSSxPQUFPLElBQUlELEtBQUs7SUFDMUMsdURBQXVEO0lBQ3ZELElBQUlFLGVBQWVQLE1BQU1RLE9BQU8sQ0FBQztRQUFjLE9BQU9MO0lBQVMsR0FBR0M7SUFDbEVKLE1BQU1TLFNBQVMsQ0FBQztRQUNaLElBQUksQ0FBQ0YsYUFBYUcsTUFBTSxFQUFFO1lBQ3RCO1FBQ0o7UUFDQSxJQUFJQyxhQUFhTixNQUFNTyxlQUFlLENBQUNMO1FBQ3ZDLE9BQU87WUFDSEk7UUFDSjtJQUNKLEdBQUc7UUFBQ047UUFBT0U7S0FBYTtBQUM1QjtBQUNBVCwwQkFBMEIsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRlcmlvLW11aS1yZWFjdC1uZXh0anMtYWRtaW4tdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlUmVnaXN0ZXJBY3Rpb25zLmpzPzU3NTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlUmVnaXN0ZXJBY3Rpb25zID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgdXNlS0Jhcl8xID0gcmVxdWlyZShcIi4vdXNlS0JhclwiKTtcbmZ1bmN0aW9uIHVzZVJlZ2lzdGVyQWN0aW9ucyhhY3Rpb25zLCBkZXBlbmRlbmNpZXMpIHtcbiAgICBpZiAoZGVwZW5kZW5jaWVzID09PSB2b2lkIDApIHsgZGVwZW5kZW5jaWVzID0gW107IH1cbiAgICB2YXIgcXVlcnkgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKCkucXVlcnk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIHZhciBhY3Rpb25zQ2FjaGUgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjdGlvbnM7IH0sIGRlcGVuZGVuY2llcyk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFhY3Rpb25zQ2FjaGUubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVucmVnaXN0ZXIgPSBxdWVyeS5yZWdpc3RlckFjdGlvbnMoYWN0aW9uc0NhY2hlKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHVucmVnaXN0ZXIoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbcXVlcnksIGFjdGlvbnNDYWNoZV0pO1xufVxuZXhwb3J0cy51c2VSZWdpc3RlckFjdGlvbnMgPSB1c2VSZWdpc3RlckFjdGlvbnM7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJfX2VzTW9kdWxlIiwicmVzdWx0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZXhwb3J0cyIsInVzZVJlZ2lzdGVyQWN0aW9ucyIsIlJlYWN0IiwicmVxdWlyZSIsInVzZUtCYXJfMSIsImFjdGlvbnMiLCJkZXBlbmRlbmNpZXMiLCJxdWVyeSIsInVzZUtCYXIiLCJhY3Rpb25zQ2FjaGUiLCJ1c2VNZW1vIiwidXNlRWZmZWN0IiwibGVuZ3RoIiwidW5yZWdpc3RlciIsInJlZ2lzdGVyQWN0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useRegisterActions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useStore.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/useStore.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useStore = void 0;\nvar fast_equals_1 = __webpack_require__(/*! fast-equals */ \"(ssr)/./node_modules/fast-equals/dist/fast-equals.esm.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionInterface_1 = __webpack_require__(/*! ./action/ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\");\nvar HistoryImpl_1 = __webpack_require__(/*! ./action/HistoryImpl */ \"(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nfunction useStore(props) {\n    var optionsRef = React.useRef(__assign({\n        animations: {\n            enterMs: 200,\n            exitMs: 100\n        }\n    }, props.options));\n    var actionsInterface = React.useMemo(function() {\n        return new ActionInterface_1.ActionInterface(props.actions || [], {\n            historyManager: optionsRef.current.enableHistory ? HistoryImpl_1.history : undefined\n        });\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // TODO: at this point useReducer might be a better approach to managing state.\n    var _a = React.useState({\n        searchQuery: \"\",\n        currentRootActionId: null,\n        visualState: types_1.VisualState.hidden,\n        actions: __assign({}, actionsInterface.actions),\n        activeIndex: 0,\n        disabled: false\n    }), state = _a[0], setState = _a[1];\n    var currState = React.useRef(state);\n    currState.current = state;\n    var getState = React.useCallback(function() {\n        return currState.current;\n    }, []);\n    var publisher = React.useMemo(function() {\n        return new Publisher(getState);\n    }, [\n        getState\n    ]);\n    React.useEffect(function() {\n        currState.current = state;\n        publisher.notify();\n    }, [\n        state,\n        publisher\n    ]);\n    var registerActions = React.useCallback(function(actions) {\n        setState(function(state) {\n            return __assign(__assign({}, state), {\n                actions: actionsInterface.add(actions)\n            });\n        });\n        return function unregister() {\n            setState(function(state) {\n                return __assign(__assign({}, state), {\n                    actions: actionsInterface.remove(actions)\n                });\n            });\n        };\n    }, [\n        actionsInterface\n    ]);\n    var inputRef = React.useRef(null);\n    return React.useMemo(function() {\n        var query = {\n            setCurrentRootAction: function(actionId) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        currentRootActionId: actionId\n                    });\n                });\n            },\n            setVisualState: function(cb) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        visualState: typeof cb === \"function\" ? cb(state.visualState) : cb\n                    });\n                });\n            },\n            setSearch: function(searchQuery) {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        searchQuery: searchQuery\n                    });\n                });\n            },\n            registerActions: registerActions,\n            toggle: function() {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        visualState: [\n                            types_1.VisualState.animatingOut,\n                            types_1.VisualState.hidden\n                        ].includes(state.visualState) ? types_1.VisualState.animatingIn : types_1.VisualState.animatingOut\n                    });\n                });\n            },\n            setActiveIndex: function(cb) {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        activeIndex: typeof cb === \"number\" ? cb : cb(state.activeIndex)\n                    });\n                });\n            },\n            inputRefSetter: function(el) {\n                inputRef.current = el;\n            },\n            getInput: function() {\n                (0, tiny_invariant_1.default)(inputRef.current, \"Input ref is undefined, make sure you attach `query.inputRefSetter` to your search input.\");\n                return inputRef.current;\n            },\n            disable: function(disable) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        disabled: disable\n                    });\n                });\n            }\n        };\n        return {\n            getState: getState,\n            query: query,\n            options: optionsRef.current,\n            subscribe: function(collector, cb) {\n                return publisher.subscribe(collector, cb);\n            }\n        };\n    }, [\n        getState,\n        publisher,\n        registerActions\n    ]);\n}\nexports.useStore = useStore;\nvar Publisher = /** @class */ function() {\n    function Publisher(getState) {\n        this.subscribers = [];\n        this.getState = getState;\n    }\n    Publisher.prototype.subscribe = function(collector, onChange) {\n        var _this = this;\n        var subscriber = new Subscriber(function() {\n            return collector(_this.getState());\n        }, onChange);\n        this.subscribers.push(subscriber);\n        return this.unsubscribe.bind(this, subscriber);\n    };\n    Publisher.prototype.unsubscribe = function(subscriber) {\n        if (this.subscribers.length) {\n            var index = this.subscribers.indexOf(subscriber);\n            if (index > -1) {\n                return this.subscribers.splice(index, 1);\n            }\n        }\n    };\n    Publisher.prototype.notify = function() {\n        this.subscribers.forEach(function(subscriber) {\n            return subscriber.collect();\n        });\n    };\n    return Publisher;\n}();\nvar Subscriber = /** @class */ function() {\n    function Subscriber(collector, onChange) {\n        this.collector = collector;\n        this.onChange = onChange;\n    }\n    Subscriber.prototype.collect = function() {\n        try {\n            // grab latest state\n            var recollect = this.collector();\n            if (!(0, fast_equals_1.deepEqual)(recollect, this.collected)) {\n                this.collected = recollect;\n                if (this.onChange) {\n                    this.onChange(this.collected);\n                }\n            }\n        } catch (error) {\n            console.warn(error);\n        }\n    };\n    return Subscriber;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/utils.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/utils.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = this && this.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = this && this.__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Priority = exports.isModKey = exports.shouldRejectKeystrokes = exports.useThrottledValue = exports.getScrollbarWidth = exports.useIsomorphicLayout = exports.noop = exports.createAction = exports.randomId = exports.usePointerMovedSinceMount = exports.useOuterClick = exports.swallowEvent = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction swallowEvent(event) {\n    event.stopPropagation();\n    event.preventDefault();\n}\nexports.swallowEvent = swallowEvent;\nfunction useOuterClick(dom, cb) {\n    var cbRef = React.useRef(cb);\n    cbRef.current = cb;\n    React.useEffect(function() {\n        function handler(event) {\n            var _a, _b;\n            if (((_a = dom.current) === null || _a === void 0 ? void 0 : _a.contains(event.target)) || // Add support for ReactShadowRoot\n            // @ts-expect-error wrong types, the `host` property exists https://stackoverflow.com/a/25340456\n            event.target === ((_b = dom.current) === null || _b === void 0 ? void 0 : _b.getRootNode().host)) {\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            cbRef.current();\n        }\n        window.addEventListener(\"pointerdown\", handler, true);\n        return function() {\n            return window.removeEventListener(\"pointerdown\", handler, true);\n        };\n    }, [\n        dom\n    ]);\n}\nexports.useOuterClick = useOuterClick;\nfunction usePointerMovedSinceMount() {\n    var _a = React.useState(false), moved = _a[0], setMoved = _a[1];\n    React.useEffect(function() {\n        function handler() {\n            setMoved(true);\n        }\n        if (!moved) {\n            window.addEventListener(\"pointermove\", handler);\n            return function() {\n                return window.removeEventListener(\"pointermove\", handler);\n            };\n        }\n    }, [\n        moved\n    ]);\n    return moved;\n}\nexports.usePointerMovedSinceMount = usePointerMovedSinceMount;\nfunction randomId() {\n    return Math.random().toString(36).substring(2, 9);\n}\nexports.randomId = randomId;\nfunction createAction(params) {\n    return __assign({\n        id: randomId()\n    }, params);\n}\nexports.createAction = createAction;\nfunction noop() {}\nexports.noop = noop;\nexports.useIsomorphicLayout =  true ? noop : 0;\n// https://stackoverflow.com/questions/13382516/getting-scroll-bar-width-using-javascript\nfunction getScrollbarWidth() {\n    var outer = document.createElement(\"div\");\n    outer.style.visibility = \"hidden\";\n    outer.style.overflow = \"scroll\";\n    document.body.appendChild(outer);\n    var inner = document.createElement(\"div\");\n    outer.appendChild(inner);\n    var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n}\nexports.getScrollbarWidth = getScrollbarWidth;\nfunction useThrottledValue(value, ms) {\n    if (ms === void 0) {\n        ms = 100;\n    }\n    var _a = React.useState(value), throttledValue = _a[0], setThrottledValue = _a[1];\n    var lastRan = React.useRef(Date.now());\n    React.useEffect(function() {\n        if (ms === 0) return;\n        var timeout = setTimeout(function() {\n            setThrottledValue(value);\n            lastRan.current = Date.now();\n        }, lastRan.current - (Date.now() - ms));\n        return function() {\n            clearTimeout(timeout);\n        };\n    }, [\n        ms,\n        value\n    ]);\n    return ms === 0 ? value : throttledValue;\n}\nexports.useThrottledValue = useThrottledValue;\nfunction shouldRejectKeystrokes(_a) {\n    var _b, _c, _d;\n    var _e = _a === void 0 ? {\n        ignoreWhenFocused: []\n    } : _a, ignoreWhenFocused = _e.ignoreWhenFocused;\n    var inputs = __spreadArray([\n        \"input\",\n        \"textarea\"\n    ], ignoreWhenFocused, true).map(function(el) {\n        return el.toLowerCase();\n    });\n    var activeElement = document.activeElement;\n    var ignoreStrokes = activeElement && (inputs.indexOf(activeElement.tagName.toLowerCase()) !== -1 || ((_b = activeElement.attributes.getNamedItem(\"role\")) === null || _b === void 0 ? void 0 : _b.value) === \"textbox\" || ((_c = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _c === void 0 ? void 0 : _c.value) === \"true\" || ((_d = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _d === void 0 ? void 0 : _d.value) === \"plaintext-only\");\n    return ignoreStrokes;\n}\nexports.shouldRejectKeystrokes = shouldRejectKeystrokes;\nvar SSR = \"undefined\" === \"undefined\";\nvar isMac = !SSR && window.navigator.platform === \"MacIntel\";\nfunction isModKey(event) {\n    return isMac ? event.metaKey : event.ctrlKey;\n}\nexports.isModKey = isModKey;\nexports.Priority = {\n    HIGH: 1,\n    NORMAL: 0,\n    LOW: -1\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRangeExtractor: () => (/* binding */ defaultRangeExtractor),\n/* harmony export */   useVirtual: () => (/* binding */ useVirtual)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nvar props = [\n    \"bottom\",\n    \"height\",\n    \"left\",\n    \"right\",\n    \"top\",\n    \"width\"\n];\nvar rectChanged = function rectChanged(a, b) {\n    if (a === void 0) {\n        a = {};\n    }\n    if (b === void 0) {\n        b = {};\n    }\n    return props.some(function(prop) {\n        return a[prop] !== b[prop];\n    });\n};\nvar observedNodes = /*#__PURE__*/ new Map();\nvar rafId;\nvar run = function run() {\n    var changedStates = [];\n    observedNodes.forEach(function(state, node) {\n        var newRect = node.getBoundingClientRect();\n        if (rectChanged(newRect, state.rect)) {\n            state.rect = newRect;\n            changedStates.push(state);\n        }\n    });\n    changedStates.forEach(function(state) {\n        state.callbacks.forEach(function(cb) {\n            return cb(state.rect);\n        });\n    });\n    rafId = window.requestAnimationFrame(run);\n};\nfunction observeRect(node, cb) {\n    return {\n        observe: function observe() {\n            var wasEmpty = observedNodes.size === 0;\n            if (observedNodes.has(node)) {\n                observedNodes.get(node).callbacks.push(cb);\n            } else {\n                observedNodes.set(node, {\n                    rect: undefined,\n                    hasRectChanged: false,\n                    callbacks: [\n                        cb\n                    ]\n                });\n            }\n            if (wasEmpty) run();\n        },\n        unobserve: function unobserve() {\n            var state = observedNodes.get(node);\n            if (state) {\n                // Remove the callback\n                var index = state.callbacks.indexOf(cb);\n                if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n                if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n                if (!observedNodes.size) cancelAnimationFrame(rafId);\n            }\n        }\n    };\n}\nvar useIsomorphicLayoutEffect =  false ? 0 : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nfunction useRect(nodeRef, initialRect) {\n    if (initialRect === void 0) {\n        initialRect = {\n            width: 0,\n            height: 0\n        };\n    }\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(nodeRef.current), element = _React$useState[0], setElement = _React$useState[1];\n    var _React$useReducer = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(rectReducer, initialRect), rect = _React$useReducer[0], dispatch = _React$useReducer[1];\n    var initialRectSet = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    useIsomorphicLayoutEffect(function() {\n        if (nodeRef.current !== element) {\n            setElement(nodeRef.current);\n        }\n    });\n    useIsomorphicLayoutEffect(function() {\n        if (element && !initialRectSet.current) {\n            initialRectSet.current = true;\n            var _rect = element.getBoundingClientRect();\n            dispatch({\n                rect: _rect\n            });\n        }\n    }, [\n        element\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n        if (!element) {\n            return;\n        }\n        var observer = observeRect(element, function(rect) {\n            dispatch({\n                rect: rect\n            });\n        });\n        observer.observe();\n        return function() {\n            observer.unobserve();\n        };\n    }, [\n        element\n    ]);\n    return rect;\n}\nfunction rectReducer(state, action) {\n    var rect = action.rect;\n    if (state.height !== rect.height || state.width !== rect.width) {\n        return rect;\n    }\n    return state;\n}\nvar defaultEstimateSize = function defaultEstimateSize() {\n    return 50;\n};\nvar defaultKeyExtractor = function defaultKeyExtractor(index) {\n    return index;\n};\nvar defaultMeasureSize = function defaultMeasureSize(el, horizontal) {\n    var key = horizontal ? \"offsetWidth\" : \"offsetHeight\";\n    return el[key];\n};\nvar defaultRangeExtractor = function defaultRangeExtractor(range) {\n    var start = Math.max(range.start - range.overscan, 0);\n    var end = Math.min(range.end + range.overscan, range.size - 1);\n    var arr = [];\n    for(var i = start; i <= end; i++){\n        arr.push(i);\n    }\n    return arr;\n};\nfunction useVirtual(_ref) {\n    var _measurements;\n    var _ref$size = _ref.size, size = _ref$size === void 0 ? 0 : _ref$size, _ref$estimateSize = _ref.estimateSize, estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize, _ref$overscan = _ref.overscan, overscan = _ref$overscan === void 0 ? 1 : _ref$overscan, _ref$paddingStart = _ref.paddingStart, paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart, _ref$paddingEnd = _ref.paddingEnd, paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd, parentRef = _ref.parentRef, horizontal = _ref.horizontal, scrollToFn = _ref.scrollToFn, useObserver = _ref.useObserver, initialRect = _ref.initialRect, onScrollElement = _ref.onScrollElement, scrollOffsetFn = _ref.scrollOffsetFn, _ref$keyExtractor = _ref.keyExtractor, keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor, _ref$measureSize = _ref.measureSize, measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize, _ref$rangeExtractor = _ref.rangeExtractor, rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;\n    var sizeKey = horizontal ? \"width\" : \"height\";\n    var scrollKey = horizontal ? \"scrollLeft\" : \"scrollTop\";\n    var latestRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        scrollOffset: 0,\n        measurements: []\n    });\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(0), scrollOffset = _React$useState[0], setScrollOffset = _React$useState[1];\n    latestRef.current.scrollOffset = scrollOffset;\n    var useMeasureParent = useObserver || useRect;\n    var _useMeasureParent = useMeasureParent(parentRef, initialRect), outerSize = _useMeasureParent[sizeKey];\n    latestRef.current.outerSize = outerSize;\n    var defaultScrollToFn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(offset) {\n        if (parentRef.current) {\n            parentRef.current[scrollKey] = offset;\n        }\n    }, [\n        parentRef,\n        scrollKey\n    ]);\n    var resolvedScrollToFn = scrollToFn || defaultScrollToFn;\n    scrollToFn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(offset) {\n        resolvedScrollToFn(offset, defaultScrollToFn);\n    }, [\n        defaultScrollToFn,\n        resolvedScrollToFn\n    ]);\n    var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0__.useState({}), measuredCache = _React$useState2[0], setMeasuredCache = _React$useState2[1];\n    var measure = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function() {\n        return setMeasuredCache({});\n    }, []);\n    var pendingMeasuredCacheIndexesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    var measurements = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n        var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;\n        pendingMeasuredCacheIndexesRef.current = [];\n        var measurements = latestRef.current.measurements.slice(0, min);\n        for(var i = min; i < size; i++){\n            var key = keyExtractor(i);\n            var measuredSize = measuredCache[key];\n            var _start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n            var _size = typeof measuredSize === \"number\" ? measuredSize : estimateSize(i);\n            var _end = _start + _size;\n            measurements[i] = {\n                index: i,\n                start: _start,\n                size: _size,\n                end: _end,\n                key: key\n            };\n        }\n        return measurements;\n    }, [\n        estimateSize,\n        measuredCache,\n        paddingStart,\n        size,\n        keyExtractor\n    ]);\n    var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;\n    latestRef.current.measurements = measurements;\n    latestRef.current.totalSize = totalSize;\n    var element = onScrollElement ? onScrollElement.current : parentRef.current;\n    var scrollOffsetFnRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(scrollOffsetFn);\n    scrollOffsetFnRef.current = scrollOffsetFn;\n    useIsomorphicLayoutEffect(function() {\n        if (!element) {\n            setScrollOffset(0);\n            return;\n        }\n        var onScroll = function onScroll(event) {\n            var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];\n            setScrollOffset(offset);\n        };\n        onScroll();\n        element.addEventListener(\"scroll\", onScroll, {\n            capture: false,\n            passive: true\n        });\n        return function() {\n            element.removeEventListener(\"scroll\", onScroll);\n        };\n    }, [\n        element,\n        scrollKey\n    ]);\n    var _calculateRange = calculateRange(latestRef.current), start = _calculateRange.start, end = _calculateRange.end;\n    var indexes = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n        return rangeExtractor({\n            start: start,\n            end: end,\n            overscan: overscan,\n            size: measurements.length\n        });\n    }, [\n        start,\n        end,\n        overscan,\n        measurements.length,\n        rangeExtractor\n    ]);\n    var measureSizeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(measureSize);\n    measureSizeRef.current = measureSize;\n    var virtualItems = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n        var virtualItems = [];\n        var _loop = function _loop(k, len) {\n            var i = indexes[k];\n            var measurement = measurements[i];\n            var item = _extends(_extends({}, measurement), {}, {\n                measureRef: function measureRef(el) {\n                    if (el) {\n                        var measuredSize = measureSizeRef.current(el, horizontal);\n                        if (measuredSize !== item.size) {\n                            var _scrollOffset = latestRef.current.scrollOffset;\n                            if (item.start < _scrollOffset) {\n                                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));\n                            }\n                            pendingMeasuredCacheIndexesRef.current.push(i);\n                            setMeasuredCache(function(old) {\n                                var _extends2;\n                                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));\n                            });\n                        }\n                    }\n                }\n            });\n            virtualItems.push(item);\n        };\n        for(var k = 0, len = indexes.length; k < len; k++){\n            _loop(k);\n        }\n        return virtualItems;\n    }, [\n        indexes,\n        defaultScrollToFn,\n        horizontal,\n        measurements\n    ]);\n    var mountedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    useIsomorphicLayoutEffect(function() {\n        if (mountedRef.current) {\n            setMeasuredCache({});\n        }\n        mountedRef.current = true;\n    }, [\n        estimateSize\n    ]);\n    var scrollToOffset = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(toOffset, _temp) {\n        var _ref2 = _temp === void 0 ? {} : _temp, _ref2$align = _ref2.align, align = _ref2$align === void 0 ? \"start\" : _ref2$align;\n        var _latestRef$current = latestRef.current, scrollOffset = _latestRef$current.scrollOffset, outerSize = _latestRef$current.outerSize;\n        if (align === \"auto\") {\n            if (toOffset <= scrollOffset) {\n                align = \"start\";\n            } else if (toOffset >= scrollOffset + outerSize) {\n                align = \"end\";\n            } else {\n                align = \"start\";\n            }\n        }\n        if (align === \"start\") {\n            scrollToFn(toOffset);\n        } else if (align === \"end\") {\n            scrollToFn(toOffset - outerSize);\n        } else if (align === \"center\") {\n            scrollToFn(toOffset - outerSize / 2);\n        }\n    }, [\n        scrollToFn\n    ]);\n    var tryScrollToIndex = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(index, _temp2) {\n        var _ref3 = _temp2 === void 0 ? {} : _temp2, _ref3$align = _ref3.align, align = _ref3$align === void 0 ? \"auto\" : _ref3$align, rest = _objectWithoutPropertiesLoose(_ref3, [\n            \"align\"\n        ]);\n        var _latestRef$current2 = latestRef.current, measurements = _latestRef$current2.measurements, scrollOffset = _latestRef$current2.scrollOffset, outerSize = _latestRef$current2.outerSize;\n        var measurement = measurements[Math.max(0, Math.min(index, size - 1))];\n        if (!measurement) {\n            return;\n        }\n        if (align === \"auto\") {\n            if (measurement.end >= scrollOffset + outerSize) {\n                align = \"end\";\n            } else if (measurement.start <= scrollOffset) {\n                align = \"start\";\n            } else {\n                return;\n            }\n        }\n        var toOffset = align === \"center\" ? measurement.start + measurement.size / 2 : align === \"end\" ? measurement.end : measurement.start;\n        scrollToOffset(toOffset, _extends({\n            align: align\n        }, rest));\n    }, [\n        scrollToOffset,\n        size\n    ]);\n    var scrollToIndex = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        // We do a double request here because of\n        // dynamic sizes which can cause offset shift\n        // and end up in the wrong spot. Unfortunately,\n        // we can't know about those dynamic sizes until\n        // we try and render them. So double down!\n        tryScrollToIndex.apply(void 0, args);\n        requestAnimationFrame(function() {\n            tryScrollToIndex.apply(void 0, args);\n        });\n    }, [\n        tryScrollToIndex\n    ]);\n    return {\n        virtualItems: virtualItems,\n        totalSize: totalSize,\n        scrollToOffset: scrollToOffset,\n        scrollToIndex: scrollToIndex,\n        measure: measure\n    };\n}\nvar findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n    while(low <= high){\n        var middle = (low + high) / 2 | 0;\n        var currentValue = getCurrentValue(middle);\n        if (currentValue < value) {\n            low = middle + 1;\n        } else if (currentValue > value) {\n            high = middle - 1;\n        } else {\n            return middle;\n        }\n    }\n    if (low > 0) {\n        return low - 1;\n    } else {\n        return 0;\n    }\n};\nfunction calculateRange(_ref4) {\n    var measurements = _ref4.measurements, outerSize = _ref4.outerSize, scrollOffset = _ref4.scrollOffset;\n    var size = measurements.length - 1;\n    var getOffset = function getOffset(index) {\n        return measurements[index].start;\n    };\n    var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);\n    var end = start;\n    while(end < size && measurements[end].end < scrollOffset + outerSize){\n        end++;\n    }\n    return {\n        start: start,\n        end: end\n    };\n}\n //# sourceMappingURL=react-virtual.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs\n");

/***/ })

};
;